---
- name: create html folder
  file:
    path: "{{ springapp_dir }}"
    owner: root
    group: root
    mode: 02755
    state: directory

- name: download html archive
  maven_artifact:
    group_id: org.openconext
    artifact_id: "{{ springapp_artifact_id }}"
    extension: zip
    version: "{{ springapp_version }}" 
    repository_url: "{{ maven_snapshot_repo if 'SNAPSHOT' in springapp_version else maven_repo }}" 
    dest: "{{  springapp_dir }}"
  register: maven_result
  until: maven_result is succeeded

- name: extract html archive
  unarchive:
    src: "{{ maven_result.dest }}" 
    dest: "{{ springapp_dir }}"
    copy: no
    owner: root
    group: apache
  register: unarchive_result
  when:
    - maven_result.changed

- name: create symlink to downloaded version
  file:
    src: "{{ unarchive_result.dest }}/{{ springapp_artifact_id}}-{{ springapp_version }}"
    dest: "{{ springapp_dir }}/current"
    state: link
    force: yes
  when:
    - unarchive_result.changed

- name: Remove old zipfiles
  shell: 'ls -t *.zip | tail -n +3|  xargs --no-run-if-empty rm -v'
  args:
    chdir: "{{ springapp_dir }}"
  register: clean_zips
  changed_when: '"removed" in clean_zips'

- name: Remove old www directories
  shell: 'find . ! -name $(basename $(readlink current)) -name "{{ springapp_artifact_id }}-*" -type d  -printf "%T@  %p\n"  | sort -rn | awk ''{print $2}'' | tail -n +2 | xargs --no-run-if-empty rm -vr'
  args:
    chdir: "{{ springapp_dir }}"
  register: clean_wwwdirs
  changed_when: '"removed" in clean_wwwdirs'
