---
env: vm

instance_name: OpenConext
base_domain: "vm.openconext.org"
support_email: help@{{ base_domain }}
noreply_email: no-reply@{{ base_domain }}

smtp_server: localhost
error_mail_to: devnull@example.org
postfix_interfaces: ipv4
php_display_errors: 1

profile_version: "1.0.0"
teams_server_version: 7.0.15
teams_gui_version: 7.0.13
mujina_version: 5.0.3
authz_server_version: 1.3.7
voot_version: 3.0.1
authz_admin_version: 2.0.11
authz_playground_version: 1.5
pdp_version: 1.2.14
attribute_aggregation_server_version: 2.0.7
attribute_aggregation_gui_version: 2.0.7
oidc_version: "1.0.10"
metadata_exporter_version: "2.0.4"
engine_version: "5.5.1"
janus_version: 1.23.1
janus_ssp_version: 1.14.17
monitoring_tests_version: 6.0.5
manage_server_version: 1.0.3-SNAPSHOT
manage_gui_version: 1.0.3-SNAPSHOT

databases:
  names:
    - teams
    - "{{ engine_database_name }}"
    - "{{ janus_database_name }}"
    - authz-server
    - pdp-server
    - oidc-server
    - aaserver
  users:
    - name: teamsrw
      db_name: teams
      password: "{{ mysql_passwords.teams }}"
    - name: "{{ engine_database_user }}"
      db_name: "{{ engine_database_name }}"
      password: "{{ mysql_passwords.eb }}"
    - name: "{{ janus_database_user }}"
      db_name: "{{ janus_database_name }}"
      password: "{{ mysql_passwords.sr }}"
    - name: authz-serverrw
      db_name: authz-server
      password: "{{ mysql_passwords.authz_server }}"
    - name: pdp-serverrw
      db_name: pdp-server
      password: "{{ mysql_passwords.pdp_server }}"
    - name: oidc-serverrw
      db_name: oidc-server
      password: "{{ mysql_passwords.oidc_server }}"
    - name: aa-serverrw
      db_name: aaserver
      password: "{{ mysql_passwords.aa_server }}"
  development_user:
    - name: development
      password: development

mongo_port: 27017
mongo_cluster: false
mongo_tls: false

mongo:
  manage_user: managerw
  manage_password: "{{ mongo_passwords.manage }}"
  manage_database: manage


tls_https:
  - name: star
    key_name: "star.{{ base_domain }}.key"
    crt_name: "star.{{ base_domain }}.pem"
    bundle_name: "star.{{ base_domain }}_ca_bundle.pem"
    key_content: "{{ https_star_private_key }}"

tls:
  cert_path: /etc/pki/tls/certs
  cert_path_ca: /etc/pki/ca-trust/source/anchors
  cert_private_path: /etc/pki/tls/private

tls_ca: star.{{ base_domain }}_ca.pem

tls_star_cert_haproxy: star.{{ base_domain }}_haproxy.pem
tls_star_cert_bundle_name: star.{{ base_domain }}_ca_bundle.pem
tls_star_cert: star.{{ base_domain }}.pem
tls_star_cert_key: star.{{ base_domain }}.key

guest_qualifier: "urn:collab:org:{{ base_domain }}"

apache_server_admin: unix@prolocation.net

janus_ssp_technicalcontact_name: "Surfconext beheer"
janus_ssp_technicalcontact_email: "surfconext-beheer@surfnet.nl"
janus_ssp_managingcontact_name: "Surfconext beheer"
janus_ssp_managingcontact_email: "surfconext-beheer@surfnet.nl"
janus_ssp_title_suffix: "OpenConext VM"

engine_idp_debugging_email_address: coin-logs-dev@list.surfnet.nl

engine_janus_user: engineblock

engine_database_name: eb
engine_database_host: localhost
engine_database_port: 3306
engine_database_user: ebrw
engine_database_password: "{{ mysql_passwords.eb }}"

engine_apache_environment: vm
engine_apache_symfony_environment: prod

engine_edugain_registration_authority: "http://www.surfnet.nl"
engine_edugain_registration_policy: "https://wiki.surfnet.nl/display/eduGAIN/EduGAIN"
engine_openconext_termsofuse_url: "https://wiki.surfnet.nl/display/conextsupport/Terms+of+Service+%28EN%29"

janus_database_name: sr
janus_database_host: localhost
janus_database_user: srrw
janus_database_password: "{{ mysql_passwords.sr }}"

janus_teams_oauth_key: https://teams.{{ base_domain }}/.*

janus_attribute_sources:
 - voot

engine_janus_cache_lifetime: 0

engine_trusted_proxy_ips:
  - 127.0.0.1

engine_keys:
  default:
    privateFile: /etc/openconext/engineblock.pem
    publicKey: engineblock.crt
    publicFile: /etc/openconext/engineblock.crt

engine_block:
  metadataRepositories:
    - index: 0
      type: "janus"
      value: "JanusRestV1"

#profile_branch: develop
profile_apache_symfony_environment: prod
# Engine's assertion signing certificate:
engine_profile_idp_certificate: /etc/openconext/engineblock.crt

tomcat_apps:
  - oidc

# shibboleth
shibboleth_apps:
  teams:
    entityID: "https://teams.{{ base_domain }}/shibboleth"
    baseurl: ""
  authz:
    entityID: "https://authz.{{ base_domain }}/shibboleth"
    baseurl: ""
  "authz-admin":
    entityID: "https://authz-admin.{{ base_domain }}/shibboleth"
    baseurl: ""
  pdp:
    entityID: "https://pdp.{{ base_domain }}/shibboleth"
    baseurl: ""
  "attribute-aggregation":
    entityID: "https://aa.{{ base_domain }}/shibboleth"
    baseurl: ""
  "attribute-aggregation-link":
    entityID: "https://link.{{ base_domain }}/shibboleth"
    baseurl: ""
  "manage":
    entityID: "https://manage.{{ base_domain }}/shibboleth"
    baseurl: ""

shib:
  engine_domain: "{{ base_domain }}"

##
# VM config for the teams app
##
teams:
  db_name: "teams"
  db_user: "teamsrw"
  db_password: "{{ mysql_passwords.teams }}"
  db_host: "{{ mysql_host }}"
  group_name_context: "urn:collab:group:{{ base_domain }}:"
  voot_api_user: "voot"
  product_name: "OpenConext Teams"
  default_stem_name: "demo:openconext:org"

teams_provision_users: true

engineblock:
  idp_url: https://engine.{{ base_domain }}/authentication/idp/single-sign-on
  idp_entity_id: https://engine.{{ base_domain }}/authentication/idp/metadata


mujina_idp:
  private_key: "{{ mujina_idp_private_key }}"
  certificate: MIIDEzCCAfugAwIBAgIJAKoK/heBjcOYMA0GCSqGSIb3DQEBBQUAMCAxHjAcBgNVBAoMFU9yZ2FuaXphdGlvbiwgQ049T0lEQzAeFw0xNTExMTExMDEyMTVaFw0yNTExMTAxMDEyMTVaMCAxHjAcBgNVBAoMFU9yZ2FuaXphdGlvbiwgQ049T0lEQzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANBGwJ/qpTQNiSgUglSE2UzEkUow+wS8r67etxoEhlzJZfgK/k5TfG1wICDqapHAxEVgUM10aBHRctNocA5wmlHtxdidhzRZroqHwpKy2BmsKX5Z2oK25RLpsyusB1KroemgA/CjUnI6rIL1xxFn3KyOFh1ZBLUQtKNQeMS7HFGgSDAp+sXuTFujz12LFDugX0T0KB5a1+0l8y0PEa0yGa1oi6seONx849ZHxM0PRvUunWkuTM+foZ0jZpFapXe02yWMqhc/2iYMieE/3GvOguJchJt6R+cut8VBb6ubKUIGK7pmoq/TB6DVXpvsHqsDJXechxcicu4pdKVDHSec850CAwEAAaNQME4wHQYDVR0OBBYEFK7RqjoodSYVXGTVEdLf3kJflP/sMB8GA1UdIwQYMBaAFK7RqjoodSYVXGTVEdLf3kJflP/sMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBADNZkxlFXh4F45muCbnQd+WmaXlGvb9tkUyAIxVL8AIu8J18F420vpnGpoUAE+Hy3evBmp2nkrFAgmr055fAjpHeZFgDZBAPCwYd3TNMDeSyMta3Ka+oS7GRFDePkMEm+kH4/rITNKUF1sOvWBTSowk9TudEDyFqgGntcdu/l/zRxvx33y3LMG5USD0x4X4IKjRrRN1BbcKgi8dq10C3jdqNancTuPoqT3WWzRvVtB/q34B7F74/6JzgEoOCEHufBMp4ZFu54P0yEGtWfTwTzuoZobrChVVBt4w/XZagrRtUCDNwRpHNbpjxYudbqLqpi1MQpV9oht/BpTHVJG2i0ro=
  passphrase: "{{ mujina_idp_passphrase }}"
  entity_id: http://mock-idp
  base_url: https://mujina-idp.{{ base_domain }}
  cookie_secure: true
mujina_sp:
  private_key: "{{ mujina_sp_private_key }}"
  certificate: MIIDEzCCAfugAwIBAgIJAKoK/heBjcOYMA0GCSqGSIb3DQEBBQUAMCAxHjAcBgNVBAoMFU9yZ2FuaXphdGlvbiwgQ049T0lEQzAeFw0xNTExMTExMDEyMTVaFw0yNTExMTAxMDEyMTVaMCAxHjAcBgNVBAoMFU9yZ2FuaXphdGlvbiwgQ049T0lEQzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANBGwJ/qpTQNiSgUglSE2UzEkUow+wS8r67etxoEhlzJZfgK/k5TfG1wICDqapHAxEVgUM10aBHRctNocA5wmlHtxdidhzRZroqHwpKy2BmsKX5Z2oK25RLpsyusB1KroemgA/CjUnI6rIL1xxFn3KyOFh1ZBLUQtKNQeMS7HFGgSDAp+sXuTFujz12LFDugX0T0KB5a1+0l8y0PEa0yGa1oi6seONx849ZHxM0PRvUunWkuTM+foZ0jZpFapXe02yWMqhc/2iYMieE/3GvOguJchJt6R+cut8VBb6ubKUIGK7pmoq/TB6DVXpvsHqsDJXechxcicu4pdKVDHSec850CAwEAAaNQME4wHQYDVR0OBBYEFK7RqjoodSYVXGTVEdLf3kJflP/sMB8GA1UdIwQYMBaAFK7RqjoodSYVXGTVEdLf3kJflP/sMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBADNZkxlFXh4F45muCbnQd+WmaXlGvb9tkUyAIxVL8AIu8J18F420vpnGpoUAE+Hy3evBmp2nkrFAgmr055fAjpHeZFgDZBAPCwYd3TNMDeSyMta3Ka+oS7GRFDePkMEm+kH4/rITNKUF1sOvWBTSowk9TudEDyFqgGntcdu/l/zRxvx33y3LMG5USD0x4X4IKjRrRN1BbcKgi8dq10C3jdqNancTuPoqT3WWzRvVtB/q34B7F74/6JzgEoOCEHufBMp4ZFu54P0yEGtWfTwTzuoZobrChVVBt4w/XZagrRtUCDNwRpHNbpjxYudbqLqpi1MQpV9oht/BpTHVJG2i0ro=
  passphrase: "{{ mujina_sp_passphrase }}"
  entity_id: http://mock-sp
  base_url: https://mujina-sp.{{ base_domain }}
  idp_metadata_url: https://engine.{{ base_domain }}/authentication/idp/metadata
  single_sign_on_service_location: https://engine.{{ base_domain }}/authentication/idp/single-sign-on
  cookie_secure: true
##
# VM config for the Authorization Server
##
authzserver:
  db_user: authz-serverrw
  db_password: "{{ mysql_passwords.authz_server }}"
  db_host: "{{ mysql_host }}"
  db_name: authz-server

##
# VM config for the Voot app
##
voot:
  authz_checkToken_endpoint_url: "https://authz.{{ base_domain }}/oauth/check_token"
  authz_checkToken_clientId: "vootservice"
  authz_checkToken_secret: "{{ voot_authz_checkToken_secret }}"
  oidc_checkToken_endpoint_url: "https://oidc.{{ base_domain }}/introspect"
  oidc_checkToken_clientId: "http@//mock-sp"
  oidc_checkToken_secret: "{{ voot_oidc_checkToken_secret }}"
  loggers:
    - { name: "voot", level: "DEBUG" }
  externalGroupProviders:
    - {
        type: "teams",
        url: "https://teams.{{ base_domain }}/api/voot",
        credentials: {
          username: "{{ teams.voot_api_user }}",
          secret: "{{ external_group_provider_secrets.teams }}"
        },
        schacHomeOrganization: "surfnet.nl",
        name: "SURFteams",
        timeoutMillis: 3000
      }

##
# VM config for the authz-admin application
##
authzadmin:
  defaultClients:
      - clientId: "{{ authzplayground.springapp_authz_client_id }}"
        secret: "{{ authzplayground.springapp_authz_client_secret }}"
        resourceIds:
          - groups
        scopes:
          - groups
        grantTypes:
          - authorization_code
          - implicit
        redirectUris:
          - https://authz-playground.{{ base_domain }}/redirect
      - clientId: surf-teams
        secret: "{{ teams_authz_client_secret }}"
        resourceIds:
          - groups
        scopes:
          - groups
        grantTypes:
          - client_credentials
      - clientId: engineblock
        secret: "{{ engineblock_authz_client_secret }}"
        resourceIds:
          - groups
        scopes:
          - groups
        grantTypes:
          - client_credentials
      - clientId: csa_client
        secret: "{{ csa_authz_client_secret }}"
        resourceIds:
          - groups
        scopes:
          - groups
        grantTypes:
          - client_credentials
      - clientId: dashboard
        secret: "{{ dashboards_authz_client_secret }}"
        resourceIds:
          - groups
        scopes:
          - groups
          - actions
          - cross-idp-services
          - stats
        grantTypes:
          - authorization_code
          - implicit
          - client_credentials
      - clientId: pdp_client
        secret: "{{ pdp_client_secret }}"
        resourceIds:
          - groups
        scopes:
          - groups
        grantTypes:
          - authorization_code
          - implicit
          - client_credentials
      - clientId: "{{ aa.authz_client_id }}"
        secret: "{{ aa_authz_client_secret }}"
        scopes:
          - groups
          - attribute-aggregation
          - saml-attribute-query
        grantTypes:
          - authorization_code
          - implicit
          - client_credentials
  defaultResourceServers:
    - clientId: vootservice
      secret: "{{ voot.authz_checkToken_secret }}"
    - clientId: csa
      secret: "{{ csa_resource_checking_secret }}"
    - clientId: pdp
      secret: "{{ voot.oidc_checkToken_secret }}"

##
# VM config for the authz-admin application
##
authzplayground:
  springapp_authz_client_id: cool_app_id
  springapp_authz_client_secret: "{{ authzplayground_springapp_authz_client_secret }}"
  springapp_oidc_client_id: http@//mock-sp
  springapp_oidc_client_secret: "{{ authzplayground_springapp_oidc_client_secret }}"

pdp:
  username: "pdp_admin"
  password: "{{ pdp_password }}"
  db_user: pdp-serverrw
  db_password: "{{ mysql_passwords.pdp_server }}"
  db_host: "{{ mysql_host }}"
  db_name: pdp-server
  spring_profiles_active: test
  cache_policies: false
  sab_username: coin-test
  sab_password: "{{ pdp_sab_password }}"
  sab_endpoint: https://sab-ng.surfnet.nl/simplesaml/module.php/attributes/server.php

aa:
  eb_username: "eb"
  eb_password: "{{ aa_eb_password }}"
  db_user: aa-serverrw
  db_password: "{{ mysql_passwords.aa_server }}"
  db_host: "{{ mysql_host }}"
  db_name: aaserver
  authz_client_id: "https@//aa.test.surfconext.nl"
  authz_resource_server_id: aa
  authz_secret: "{{ aa_authz_client_secret }}"
  idin_client_id: am_aa_client
  idin_secret: "{{ aa_idin_client_secret }}"
  oidc_client_id: "https@//aa.surfconext.test.nl"
  oidc_secret: "{{ aa_oidc_client_secret }}"
  spring_profiles_active: acc
  sab_username: coin-test
  sab_password: "{{ aa_sab_password }}"
  sab_endpoint: https://sab-ng.surfnet.nl/simplesaml/module.php/attributes/server.php
  orcid_client_id: "APP-IP57TTCD5F8BAIGS"
  orcid_secret: "{{ aa_orcid_password }}"
  orcid_authorization_uri: "https://sandbox.orcid.org/oauth/authorize"
  access_token_uri: "https://sandbox.orcid.org/oauth/token"
  surfmarket_url: https://example.org
  surfmarket_username: example@example.org
  surfmarket_password: "{{ aa_surfmarket_password }}"
  aggregate_cache: 0

oidc:
  environment: vm
  issuer: https://oidc.{{ base_domain }}/
  db_user: oidc-serverrw
  db_password: "{{ mysql_passwords.oidc_server }}"
  db_host: "{{ mysql_host }}"
  db_name: oidc-server
  sp_entity_id: https://oidc.{{ base_domain }}

metadata_exporter:
  db_user: srrw
  db_password: "{{ mysql_passwords.sr }}"
  db_host: "{{ mysql_host }}"
  db_name: sr
  password: "{{ metadata_exporter_password }}"

monitoring_tests:
  mujina_idp_entity_id: http://mock-idp
  mujina_sp_base_url: https://mujina-sp.{{ base_domain }}
  person_id: "{{ monitoring_tests_person_id }}"
  user: monitor
  password: "{{ monitoring_tests_password }}"

manage:
  db_user: "{{ janus_database_user }}"
  db_password: "{{ mysql_passwords.sr }}"
  db_name: "{{ janus_database_name }}"
  db_host: "{{ mysql_host }}"
  eb_db_user: "{{ engine_database_user }}"
  eb_db_password: "{{ mysql_passwords.eb }}"
  eb_db_name: "{{ engine_database_name }}"
  eb_db_host: "{{ mysql_host }}"
  mongo_port: "{{ mongo_port }}"
  mongo_user: "{{ mongo.manage_user }}"
  mongo_password: "{{ mongo.manage_password }}"
  mongo_database: "manage"
  backdoor_api_user: backdoor_api_user
  run_migrations: false
  push_after_migration: false
  features: migration, validation, push_preview, push
  apiUsers:
    - {
        name: "attribute-aggregator",
        password: "{{ manage_attribute_aggregator_secret }}",
        scopes: ["READ"]
      }
    - {
        name: "pdp",
        password: "{{ manage_pdp_secret }}",
        scopes: ["READ"]
      }
    - {
        name: "sp-dashboard",
        password: "{{ manage_sp_dashboard_secret }}",
        scopes: ["READ", "WRITE", "PUSH"]
      }
          




springapp_tcpport_error_handling: 9199

loadbalancing:
  engine:
    port: 401
  profile:
    port: 402
  static:
    port: 403
  serviceregistry:
    port: 404
  engine_api:
    port: 405
  metadata:
    port: 409
  teams:
    port: 601
  authzserver:
    port: 602
  authz_admin:
    port: 603
  authz_playground:
    port: 604
  voot:
    port: 605
  mujina_sp:
    port: 607
  mujina_idp:
    port: 608
  welcome:
    port: 609
  oidc:
    port: 614
  pdp:
    port: 613
  aa:
    port: 615
  metadata_exporter:
    port: 616
  manage:
    port: 617

haproxy_applications:
  - name: multidata
    vhost_name: multidata
    ip: 127.0.0.1
    ha_method: GET
    ha_url: /health
    port: 616
    servers: "{{ java_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: manage
    vhost_name: manage
    ip: 127.0.0.1
    ha_method: GET
    ha_url: /manage/api/health
    port: 617
    servers: "{{ java_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: pdp
    vhost_name: pdp
    ip: 127.0.0.1
    ha_method: GET
    ha_url: /pdp/api/health
    port: 613
    servers: "{{ java_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: teams
    vhost_name: teams
    ip: 127.0.0.1
    ha_method: GET
    ha_url: "/api/teams/health"
    port: 601
    servers: "{{ java_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: authzserver
    vhost_name: authz
    ip: 127.0.0.1
    ha_method: GET
    ha_url: "/health"
    port: 602
    servers: "{{ java_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: authz_admin
    vhost_name: authz-admin
    ip: 127.0.0.1
    ha_method: GET
    ha_url: "/health"
    port: 603
    servers: "{{ java_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: authz_playground
    vhost_name: authz-playground
    ip: 127.0.0.1
    ha_method: GET
    ha_url: "/health"
    port: 604
    servers: "{{ java_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"
   
  - name: voot
    vhost_name: voot
    ip: 127.0.0.1
    ha_method: GET
    ha_url: "/health"
    port: 605
    servers: "{{ java_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"
  
  - name: aa
    vhost_name: aa
    ip: 127.0.0.1
    ha_method: GET
    ha_url: "/aa/api/health"
    port: 615
    servers: "{{ java_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"
  
  - name: engine
    vhost_name: engine
    ip: 127.0.0.1
    ha_method: GET
    ha_url: /
    port: 401
    servers: "{{ php_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: profile
    vhost_name: profile
    ip: 127.0.0.1
    ha_method: GET
    ha_url: /
    port: 402
    servers: "{{ php_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"
  
  - name: serviceregistry
    vhost_name: serviceregistry
    ip: 127.0.0.1
    ha_method: HEAD
    ha_url: /
    port: 404
    servers: "{{ php_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: engine_api
    vhost_name: engine-api
    ip: 127.0.0.1
    ha_method: GET
    ha_url: /
    port: 405
    servers: "{{ php_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: static
    vhost_name: static
    ip: 127.0.0.1
    ha_method: HEAD
    ha_url: /media/alive.txt
    port: 403
    servers: "{{ php_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: metadata
    vhost_name: metadata
    ip: 127.0.0.1
    ha_method: HEAD
    ha_url: /alive.txt
    port: 409
    servers: "{{ php_servers }}"
    crt_name: "{{ tls_star_cert }}"
    key_name: "{{ tls_star_cert_key }}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: mujina-idp
    vhost_name: "mujina-idp"
    ip: "192.168.66.98"
    ha_method: "GET"
    ha_url: "/"
    port: "608"
    servers: "{{java_servers}}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

  - name: mujina-sp
    vhost_name: "mujina-sp"
    ip: "127.0.0.1"
    ha_method: "GET"
    ha_url: "/"
    port: "607"
    servers: "{{java_servers}}"
    sslbackend: yes
    backend_vhost_name: backend.{{ base_domain }}
    backend_ca_file: "{{ tls_backend_ca }}"

haproxy_backend_tls: true

haproxy_sni_ip: "*"

java_servers:
   - ip: 127.0.0.1
     label: d01
php_servers:
   - ip: 127.0.0.1
     label: phpapps

