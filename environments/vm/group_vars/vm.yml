---
env: vm

instance_name: OpenConext
base_domain: "vm.openconext.org"
myconext_base_domain: "vm.openconext.org"
support_email: help@example.org
noreply_email: no-reply@example.org
smtp_server: localhost
error_mail_to: devnull@example.org

php_display_errors: 1

attribute_aggregation_gui_version: "2.1.0"
attribute_aggregation_server_version: "2.1.0"
oidc_playground_client_version: "2.3.1"
oidc_playground_server_version: "2.3.1"
engine_version: "6.3.6"
manage_gui_version: "6.0.0"
manage_server_version: "6.0.0"
monitoring_tests_version: "6.0.5"
mujina_version: "7.4.1"
oidc_version: "1.3.12"
oidcng_version: "3.1.3"
pdp_gui_version: "2.1.0"
pdp_server_version: "2.1.0"
profile_version: "2.0.3"
teams_gui_version: "8.3.8"
teams_server_version: "8.3.8"
voot_version: "4.0.0"
myconext_server_version: "3.0.8"
myconext_gui_version: "3.0.8"
account_gui_version: "3.0.8"
eduid_gui_version: "3.0.8"

databases:
  names:
    - teams
    - "{{ engine_database_name }}"
    - pdp-server
    - oidc-server
    - aaserver
    - spdashboard
    - shibboleth
  users:
    - { name: teamsrw, db_name: teams, password: "{{ mysql_passwords.teams }}" }
    - { name: "{{ engine_database_user }}", db_name: "{{ engine_database_name }}", password: "{{ mysql_passwords.eb }}" }
    - { name: pdp-serverrw, db_name: pdp-server, password: "{{ mysql_passwords.pdp_server }}" }
    - { name: oidc-serverrw, db_name: oidc-server, password: "{{ mysql_passwords.oidc_server }}" }
    - { name: aa-serverrw, db_name: aaserver, password: "{{ mysql_passwords.aa_server }}" }
    - { name: spdrw, db_name: spdashboard, password: "{{ mysql_passwords.spdashboard }}" }
    - { name: shibrw, db_name: shibboleth, password: "{{ mysql_passwords.shibboleth }}" }
  development_user:
    - { name: development, password: development }

mongo_port: 27017
mongo_cluster: false
mongo_tls: false
mongo_hostname: localhost
mongo_host: "{{ mongo_hostname }}"

mongo:
  users:
    - { name: managerw, db_name: metadata, password: "{{ mongo_passwords.manage }}" }
    - { name: oidcngrw, db_name: oidcng, password: "{{ mongo_passwords.oidcng }}" }
    - { name: myconextrw, db_name: myconext, password: "{{ mongo_passwords.myconext }}" }

tls:
  cert_path: /etc/pki/tls/certs
  cert_path_ca: /etc/pki/ca-trust/source/anchors/
  cert_private_path: /etc/pki/tls/private


tls_ca: star.{{ base_domain }}_ca.pem
tls_star_cert: star.{{ base_domain }}.pem
tls_star_cert_key: star.{{ base_domain }}.key

guest_qualifier: "urn:collab:org:{{ base_domain }}"

apache_server_admin: "root@{{ base_domain }}"

engine_idp_debugging_email_address: coin-logs-dev@list.surfnet.nl

# when using multiple certificates list them all (and their bundles) under tls.certificates

engine_database_name: eb
engine_database_host: localhost
engine_database_port: 3306
engine_database_user: ebrw
engine_database_password: "{{ mysql_passwords.eb }}"

engine_test_database_name: eb_test
engine_test_database_host: localhost
engine_test_database_port: 3306
engine_test_database_user: eb_testrw
engine_test_database_password: "{{ mysql_passwords.eb }}"

engine_apache_environment: vm
engine_apache_symfony_environment: prod

engine_trusted_proxy_ips:
  - 192.168.1.1
  - 10.0.0.1
#
engine_keys:
  default:
    privateFile: /etc/openconext/engineblock.pem
    publicKey: engineblock.crt
    publicFile: /etc/openconext/engineblock.crt

#profile_branch: develop
profile_apache_symfony_environment: prod
# Engine's assertion signing certificate (fixme: make variable?):
engine_profile_idp_certificate: /etc/openconext/engineblock.crt

tomcat_apps:
  - oidc

# shibboleth
shibboleth_apps:
  teams:
    entityID: "https://teams.{{ base_domain }}/shibboleth"
    baseurl: ""
  pdp:
    entityID: "https://pdp.{{ base_domain }}/shibboleth"
    baseurl: ""
  "attribute-aggregation":
    entityID: "https://aa.{{ base_domain }}/shibboleth"
    baseurl: ""
  "attribute-aggregation-link":
    entityID: "https://link.{{ base_domain }}/shibboleth"
    baseurl: ""
  "manage":
    entityID: "https://manage.{{ base_domain }}/shibboleth"
    baseurl: ""
  "myconext":
    entityID: "https://my.{{ base_domain }}/shibboleth"
    baseurl: ""

shib:
  db_host: "127.0.0.1"
shibboleth_database_backend: true


##
# VM config for the teams app
##
teams:
  db_name: "teams"
  db_user: "teamsrw"
  db_password: "{{ mysql_passwords.teams }}"
  db_host: "{{ mysql_host }}"
  group_name_context: "urn:collab:group:{{ base_domain }}:"
  voot_api_user: "voot"
  product_name: "OpenConext Teams"
  default_stem_name: "demo:openconext:org"
  super_admins_team_urns:
    - "nl:surfnet:diensten:teams_super_users"
    - "nl:surfnet:diensten:teams_super_admin_users"

engineblock:
  idp_url: https://engine.{{ base_domain }}/authentication/idp/single-sign-on
  idp_entity_id: https://engine.{{ base_domain }}/authentication/idp/metadata

mujina_idp:
  private_key: "{{ mujina_idp_private_key }}"
  certificate: MIIDEzCCAfugAwIBAgIJAKoK/heBjcOYMA0GCSqGSIb3DQEBBQUAMCAxHjAcBgNVBAoMFU9yZ2FuaXphdGlvbiwgQ049T0lEQzAeFw0xNTExMTExMDEyMTVaFw0yNTExMTAxMDEyMTVaMCAxHjAcBgNVBAoMFU9yZ2FuaXphdGlvbiwgQ049T0lEQzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANBGwJ/qpTQNiSgUglSE2UzEkUow+wS8r67etxoEhlzJZfgK/k5TfG1wICDqapHAxEVgUM10aBHRctNocA5wmlHtxdidhzRZroqHwpKy2BmsKX5Z2oK25RLpsyusB1KroemgA/CjUnI6rIL1xxFn3KyOFh1ZBLUQtKNQeMS7HFGgSDAp+sXuTFujz12LFDugX0T0KB5a1+0l8y0PEa0yGa1oi6seONx849ZHxM0PRvUunWkuTM+foZ0jZpFapXe02yWMqhc/2iYMieE/3GvOguJchJt6R+cut8VBb6ubKUIGK7pmoq/TB6DVXpvsHqsDJXechxcicu4pdKVDHSec850CAwEAAaNQME4wHQYDVR0OBBYEFK7RqjoodSYVXGTVEdLf3kJflP/sMB8GA1UdIwQYMBaAFK7RqjoodSYVXGTVEdLf3kJflP/sMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBADNZkxlFXh4F45muCbnQd+WmaXlGvb9tkUyAIxVL8AIu8J18F420vpnGpoUAE+Hy3evBmp2nkrFAgmr055fAjpHeZFgDZBAPCwYd3TNMDeSyMta3Ka+oS7GRFDePkMEm+kH4/rITNKUF1sOvWBTSowk9TudEDyFqgGntcdu/l/zRxvx33y3LMG5USD0x4X4IKjRrRN1BbcKgi8dq10C3jdqNancTuPoqT3WWzRvVtB/q34B7F74/6JzgEoOCEHufBMp4ZFu54P0yEGtWfTwTzuoZobrChVVBt4w/XZagrRtUCDNwRpHNbpjxYudbqLqpi1MQpV9oht/BpTHVJG2i0ro=
  passphrase: "{{ mujina_idp_passphrase }}"
  entity_id: http://mock-idp
  base_url: https://mujina-idp.{{ base_domain }}
  cookie_secure: true
mujina_sp:
  private_key: "{{ mujina_sp_private_key }}"
  certificate: MIIDEzCCAfugAwIBAgIJAKoK/heBjcOYMA0GCSqGSIb3DQEBBQUAMCAxHjAcBgNVBAoMFU9yZ2FuaXphdGlvbiwgQ049T0lEQzAeFw0xNTExMTExMDEyMTVaFw0yNTExMTAxMDEyMTVaMCAxHjAcBgNVBAoMFU9yZ2FuaXphdGlvbiwgQ049T0lEQzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANBGwJ/qpTQNiSgUglSE2UzEkUow+wS8r67etxoEhlzJZfgK/k5TfG1wICDqapHAxEVgUM10aBHRctNocA5wmlHtxdidhzRZroqHwpKy2BmsKX5Z2oK25RLpsyusB1KroemgA/CjUnI6rIL1xxFn3KyOFh1ZBLUQtKNQeMS7HFGgSDAp+sXuTFujz12LFDugX0T0KB5a1+0l8y0PEa0yGa1oi6seONx849ZHxM0PRvUunWkuTM+foZ0jZpFapXe02yWMqhc/2iYMieE/3GvOguJchJt6R+cut8VBb6ubKUIGK7pmoq/TB6DVXpvsHqsDJXechxcicu4pdKVDHSec850CAwEAAaNQME4wHQYDVR0OBBYEFK7RqjoodSYVXGTVEdLf3kJflP/sMB8GA1UdIwQYMBaAFK7RqjoodSYVXGTVEdLf3kJflP/sMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBADNZkxlFXh4F45muCbnQd+WmaXlGvb9tkUyAIxVL8AIu8J18F420vpnGpoUAE+Hy3evBmp2nkrFAgmr055fAjpHeZFgDZBAPCwYd3TNMDeSyMta3Ka+oS7GRFDePkMEm+kH4/rITNKUF1sOvWBTSowk9TudEDyFqgGntcdu/l/zRxvx33y3LMG5USD0x4X4IKjRrRN1BbcKgi8dq10C3jdqNancTuPoqT3WWzRvVtB/q34B7F74/6JzgEoOCEHufBMp4ZFu54P0yEGtWfTwTzuoZobrChVVBt4w/XZagrRtUCDNwRpHNbpjxYudbqLqpi1MQpV9oht/BpTHVJG2i0ro=
  passphrase: "{{ mujina_sp_passphrase }}"
  entity_id: http://mock-sp
  base_url: https://mujina-sp.{{ base_domain }}
  idp_metadata_url: https://engine.{{ base_domain }}/authentication/idp/metadata
  single_sign_on_service_location: https://engine.{{ base_domain }}/authentication/idp/single-sign-on
  cookie_secure: true

##
# VM config for the Voot app
##
voot:
  oidcng_checkToken_endpoint_url: "https://connect.{{ base_domain }}/oidc/introspect"
  oidcng_checkToken_clientId: "voot.{{ base_domain }}"
  oidcng_checkToken_secret: "{{ voot_oidcng_checkToken_secret }}"
  loggers:
    - { name: "voot", level: "DEBUG" }
  externalGroupProviders:
    - {
        type: "teams",
        url: "https://teams.{{ base_domain }}/api/voot",
        credentials: {
          username: "{{ teams.voot_api_user }}",
          secret: "{{ external_group_provider_secrets.teams }}"
        },
        schacHomeOrganization: "test.surfteams.nl",
        name: "SURFteams",
        timeoutMillis: 15000
      }

oidc_playground:
  discovery_endpoint: "https://connect.{{ base_domain }}/oidc/.well-known/openid-configuration"
  client_id: playground_client
  secret: "{{ oidc_playground_secret }}"
  jwt_secret: "{{ oidc_playground_jwt_secret }}"
  resource_server_id: resource-server-playground-client
  resource_server_secret: "{{ oidc_playground_resource_server_secret }}"
  gui_disclaimer:
    background_color: red
    content: "{{ env }}"

pdp:
  username: "pdp_admin"
  password: "{{ pdp_password }}"
  db_user: pdp-serverrw
  db_password: "{{ mysql_passwords.pdp_server }}"
  db_host: "{{ mysql_host }}"
  db_name: pdp-server
  spring_profiles_active: test
  cache_policies: false
  sab_username: coin-test
  sab_password: "{{ pdp_sab_password }}"
  sab_endpoint: https://sab-ng.surfnet.nl/simplesaml/module.php/attributes/server.php

aa:
  eb_username: "eb"
  eb_password: "{{ aa_eb_password }}"
  db_user: aa-serverrw
  db_password: "{{ mysql_passwords.aa_server }}"
  db_host: "{{ mysql_host }}"
  db_name: aaserver
  authz_client_id: "aa.{{ base_domain }}"
  authz_resource_server_id: aa
  authz_secret: "{{ aa_authz_client_secret }}"
  idin_client_id: am_aa_client
  idin_secret: "{{ aa_idin_client_secret }}"
  orcid_client_id: "anonymous"
  orcid_secret: "{{ aa_orcid_password }}"
  orcid_authorization_uri: "https://sandbox.orcid.org/oauth/authorize"
  access_token_uri: "https://sandbox.orcid.org/oauth/token"
  spring_profiles_active: acc
  sab_username: coin-test
  sab_password: "{{ aa_sab_password }}"
  sab_endpoint: https://sab-ng.surfnet.nl/simplesaml/module.php/attributes/server.php
  surfmarket_url: https://example.org
  surfmarket_username: example@example.org
  surfmarket_password: "{{ aa_surfmarket_password }}"
  sbs_username: sbs_aa
  sbs_password: "{{ aa_sbs_password }}"
  ala_url: https://ala.demo.eduid.nl/attribute_aggregation
  ala_username: admin
  ala_password: "{{ aa_ala_password }}"
  manage_url: https://manage.test.surfconext.nl
  manage_username: attribute-aggregation
  manage_password: "{{ aa_manage_password }}"
  eduid_url: "https://login.{{ myconext_base_domain }}/myconext/api/attribute-aggregation"
  eduid_username: aa
  eduid_password: "{{ myconext_api_attribute_aggregation_password }}"
  aggregate_cache: 0

oidc:
  environment: vm
  issuer: https://oidc.{{ base_domain }}/
  db_user: oidc-serverrw
  db_password: "{{ mysql_passwords.oidc_server }}"
  db_host: "{{ mysql_host }}"
  db_name: oidc-server
  sp_entity_id: https://oidc.{{ base_domain }}
  api_user: manage

oidcng:
  issuer: https://oidc.{{ base_domain }}/
  mongo_host: "{{ mongo_hostname }}"
  mongo_port: "{{ mongo_port }}"
  mongo_user: oidcngrw
  mongo_password: "{{ mongo_passwords.oidcng }}"
  mongo_database: oidcng
  sp_entity_id: https://connect.{{ base_domain }}
  api_user: manage
  key_rollover_cron_expression: "0 0 0 * * *"
  acr_values_supported:
    - http://{{ base_domain }}/assurance/loa1
    - http://{{ base_domain }}/assurance/loa2
    - http://{{ base_domain }}/assurance/loa3
    - https://eduid.nl/trust/validate-names
    - https://eduid.nl/trust/linked-institution
    - https://eduid.nl/trust/affiliation-student
  default_acr_value: http://{{ base_domain }}/assurance/loa1
  eduid_attribute_manipulation_enabled: false
  token_api_enabled: false
oidcng_logback_email: false

myconext:
  mongo_host: "{{ mongo_host }}"
  mongo_port: "{{ mongo_port }}"
  mongo_user: myconextrw
  mongo_database: myconext
  mongo_password: "{{ mongo_passwords.myconext }}"
  rp_client_id: myconext.ala.eduid
  feature_webauthn: false
  sp_entity_id: https://engine.{{ base_domain }}/authentication/sp/metadata
  sp_entity_metadata_url: https://engine.{{ base_domain }}/authentication/sp/metadata
  links:
    - { name: "help" , url: "https://wiki.surfnet.nl/x/EYzaAQ" }
    - { name: "help_en" , url: "https://wiki.surfnet.nl/x/FYzaAQ" }
    - { name: "privacyverklaring" , url: "https://wiki.surfnet.nl/x/G4zaAQ" }
    - { name: "privacy_policy" , url: "https://wiki.surfnet.nl/x/MIzaAQ" }
    - { name: "terms_of_service" , url: "https://wiki.surfnet.nl/x/LozaAQ"}
    - { name: "voorwaarden" , url: "https://wiki.surfnet.nl/x/HYzaAQ"}
myconext_onegini_entity_id: http://mock-idp


monitoring_tests:
  mujina_idp_entity_id: http://mock-idp
  mujina_sp_base_url: https://mujina-sp.{{ base_domain }}
  person_id: "{{ monitoring_tests_person_id }}"
  user: monitor
  password: "{{ monitoring_tests_password }}"
  oidcng_client_id: playground_client
  oidcng_resource_server_id: resource-server-playground-client

manage:
  eb_db_user: "{{ engine_database_user }}"
  eb_db_password: "{{ mysql_passwords.eb }}"
  eb_db_name: "{{ engine_database_name }}"
  eb_db_host: "{{ mysql_host }}"
  mongo_port: "{{ mongo_port }}"
  mongo_user: "{{ manage_mongo_user }}"
  mongo_password: "{{ mongo_passwords.manage }}"
  mongo_database: "{{ manage_mongo_db }}"
  backdoor_api_user: backdoor_api_user
  oidcng_name: "OpenConext OIDC-NG"
  oidc_push_enabled: false
  features: push, validation, push_preview, orphans
  apiUsers:
    - {
        name: "dashboard",
        password: "{{ manage_dashboard_secret }}",
        scopes: ["READ"]
      }
    - {
        name: "pdp",
        password: "{{ manage_pdp_secret }}",
        scopes: ["READ"]
      }
    - {
        name: "sp-dashboard",
        password: "{{ manage_sp_dashboard_secret }}",
        scopes: ["READ", "WRITE", "PUSH"]
      }
    - {
        name: "sysadmin",
        password: "{{ manage_sysadmin_secret }}",
        scopes: ["READ", "WRITE", "PUSH", "SYSTEM"]
      }
    - {
        name: "stats",
        password: "{{ manage_stats_api_password }}",
        scopes: ["READ"]
      }
    - {
        name: "attribute-aggregation",
        password: "{{ aa_manage_password }}",
        scopes: ["READ"]
      }
  loa_values_supported:
    - http://{{ base_domain }}/assurance/loa2
    - http://{{ base_domain }}/assurance/loa3
  oidc_rp_redirect_url_format: "url"

manage_mongo_db: metadata
manage_mongo_user: managerw

loadbalancing:
  engine:
    port: 401

  profile:
    port: 402

  static:
    port: 403

  engine_api:
    port: 405

  metadata:
    port: 409

  teams:
    port: 601

  oidc_playground:
    port: 619

  voot:
    port: 605

  pdp:
    port: 613

  oidc:
    port: 614

  aa:
    port: 615

  manage:
    port: 617

  oidcng:
    port: 620

  account:
    port: 621

  myconext:
    port: 622

  eduid:
    port: 10622

  mujina_sp:
    port: 607

  mujina_idp:
    port: 608

  welcome:
    port: 609

  kibana:
    port: 701

  stats:
    port: 702

haproxy_applications:

  - name: engine
    vhost_name: engine.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/health"
    port: "{{ loadbalancing.engine.port }}"
    servers: "{{php_servers}}"

  - name: profile
    vhost_name: profile.{{ base_domain }}
    ha_method: "HEAD"
    ha_url: "/health"
    port: "{{ loadbalancing.profile.port }}"
    servers: "{{php_servers}}"

  - name: static
    vhost_name: static.{{ base_domain }}
    ha_method: "HEAD"
    ha_url: "/media/alive.txt"
    port: "{{ loadbalancing.static.port }}"
    servers: "{{php_servers}}"

  - name: engine_api
    vhost_name: engine-api.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/"
    port: "{{ loadbalancing.engine_api.port }}"
    servers: "{{php_servers}}"

  - name: metadata
    vhost_name: metadata.{{ base_domain }}
    ha_method: "HEAD"
    ha_url: "/alive.txt"
    port: "{{ loadbalancing.metadata.port }}"
    servers: "{{php_servers}}"

  - name: teams
    vhost_name: teams.{{ base_domain }}
    ha_method: GET
    ha_url: "/api/teams/health"
    port: "{{ loadbalancing.teams.port }}"
    servers: "{{java_servers}}"

  - name: oidc_playground
    vhost_name: "oidc-playground.{{base_domain }}"
    ha_method: "GET"
    ha_url: "/oidc/api/actuator/health"
    port: "{{ loadbalancing.oidc_playground.port }}"
    servers: "{{java_servers}}"

  - name: voot
    vhost_name: voot.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/health"
    port: "{{ loadbalancing.voot.port }}"
    servers: "{{java_servers}}"

  - name: pdp
    vhost_name: pdp.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/pdp/api/health"
    port: "{{ loadbalancing.pdp.port }}"
    servers: "{{java_servers}}"

  - name: oidc
    vhost_name: oidc.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/health"
    port: "{{ loadbalancing.oidc.port }}"
    servers: "{{java_servers}}"

  - name: aa
    vhost_name: aa.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/aa/api/health"
    port: "{{ loadbalancing.aa.port }}"
    servers: "{{java_servers}}"

  - name: link
    vhost_name: link.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/aa/api/health"
    port: "{{ loadbalancing.aa.port }}"
    servers: "{{java_servers}}"

  - name: manage
    vhost_name: manage.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/manage/api/health"
    port: "{{ loadbalancing.manage.port }}"
    servers: "{{java_servers}}"

  - name: oidcng
    vhost_name: connect.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/actuator/health"
    port: "{{ loadbalancing.oidcng.port }}"
    servers: "{{java_servers}}"

  - name: myconext
    vhost_name: my.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/actuator/health"
    port: "{{ loadbalancing.myconext.port }}"
    servers: "{{java_servers}}"

  - name: account
    vhost_name: account.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/actuator/health"
    port: "{{ loadbalancing.account.port }}"
    servers: "{{java_servers}}"

  - name: eduid
    vhost_name: eduid.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/actuator/health"
    port: "{{ loadbalancing.eduid.port }}"
    servers: "{{java_servers}}"

  - name: mujina-sp
    vhost_name: mujina-sp.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/"
    port: "{{ loadbalancing.mujina_sp.port }}"
    servers: "{{java_servers}}"

  - name: mujina-idp
    vhost_name: mujina-idp.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/"
    port: "{{ loadbalancing.mujina_idp.port }}"
    servers: "{{java_servers}}"

  - name: welcome
    vhost_name: welcome.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/"
    port: "{{ loadbalancing.welcome.port }}"
    servers: "{{php_servers}}"

  - name: kibana
    vhost_name: kibana.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/"
    port: "{{ loadbalancing.kibana.port }}"
    servers: "{{php_servers}}"

  - name: stats
    vhost_name: stats.{{ base_domain }}
    ha_method: "GET"
    ha_url: "/health"
    port: "{{ loadbalancing.stats.port }}"
    servers: "{{php_servers}}"

haproxy_sni_ip:
  ipv4: 192.168.66.98
  ipv6:  "::1"
  certs:
     - name: star
       key_content: "{{ https_star_private_key }}"
       crt_name: star.{{ base_domain }}.pem

haproxy_backend_tls: False

php_servers:
   - { ip: "192.168.66.99", label: "phpapps"}

java_servers:
   - { ip: "192.168.66.99", label: "javapps"}

dashboard_install: false
iptables_enable: False
