---
- name: Prepare
  hosts: all

  vars:
    inventory_dir: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/../../environments/vm"
    copy_tls_ca:
      - src: /root/CA.crt
        dest: "{{ inventory_dir }}/files/certs/galera/galera_ca.pem"
      - src: /root/CA_key.pem
        dest: "{{ inventory_dir }}/files/certs/galera/galera_ca.key"

  pre_tasks:
    - name: Read vars from secrets file
      include_vars: "../../environments/vm/secrets/vm.yml"
    - name: Read vars from group_vars file
      include_vars: "../../environments/vm/group_vars/vm.yml"

    - name: "Install package(s)"
      yum:
        name:
          - crontabs
        state: present
      register: prepare_packages_installed
      until: prepare_packages_installed is succeeded

    - name: create CA key
      openssl_privatekey:
        path: /root/CA_key.pem
      register: ca_key
      run_once: true

    - name: create the CA CSR
      openssl_csr:
        path: /root/CA.csr
        privatekey_path: "{{ ca_key.filename }}"
        common_name: "my-ca"
        basic_constraints: "CA:TRUE"
        key_usage:
          - keyCertSign
          - cRLSign
          - digitalSignature
      register: ca_csr
      run_once: true

    - name: sign the CA CSR
      openssl_certificate:
        path: /root/CA.crt
        csr_path: "{{ ca_csr.filename }}"
        privatekey_path: "{{ ca_key.filename }}"
        provider: selfsigned
      register: ca_crt
      run_once: true

    - name: "Fetch CA crt"
      fetch:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        flat: true
      with_items: "{{ copy_tls_ca }}"
      run_once: true

    - name: "Copy CA crt file"
      copy:
        src: "{{ item.dest }}"
        dest: "{{ item.src }}"
      with_items: "{{ copy_tls_ca }}"

    - name: create host CSR signing key
      openssl_privatekey:
        path: /root/example_com_host_key.pem
      register: example_com_key

    - name: create the CSR for the Galera server
      openssl_csr:
        path: /root/example_com.csr
        privatekey_path: "{{ example_com_key.filename }}"
        common_name: example.com
        subject_alt_name: 'DNS:{{ inventory_hostname }}'
      register: example_com_csr

    - name: sign the CSR for the Galera server
      openssl_certificate:
        path: /root/example_com.crt
        csr_path: "{{ example_com_csr.filename }}"
        provider: ownca
        ownca_path: "{{ hostvars['openconext-rocky8-mysql'].ca_crt.filename }}"
        ownca_privatekey_path: "{{ hostvars['openconext-rocky8-mysql'].ca_key.filename }}"
      register: example_com_crt

    - name: "Fetch files"
      fetch:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        flat: true
      with_items:
        - src: /root/CA.crt
          dest: "{{ inventory_dir }}/files/certs/galera/galera_ca.pem"
        - src: /root/example_com_host_key.pem
          dest: "{{ inventory_dir }}/files/certs/galera/galera_server.key"
        - src: /root/example_com.crt
          dest: "{{ inventory_dir }}/files/certs/galera/galera_server.pem"
        - src: /root/example_com.crt
          dest: "{{ inventory_dir }}/files/certs/galera/{{ inventory_hostname }}-galera_client.pem"
      run_once: true

  roles:
    - role: keepalived
      keepalived:
        state_master: MASTER
        state_backup: BACKUP
        masterprio: 101
        backupprio: 100
      keepalived_loadbalancer_vrrp_password: mysecret
