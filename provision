#!/bin/bash
set -e
export ANSIBLE_ROLES_PATH="roles:roles-external"


# helper function: check if a specified value is present in a space-separted list
listcontains() {
	match=$1
	shift
	for word in $@
	do
		[[ $word = $match ]] && return 0
	done
	return 1
}

# check ansible
ANSVER=$(ansible --version|head -1|cut -d " " -f 2)
ANSVER1=$(echo "$ANSVER" | cut -d '.' -f 1)
ANSVER2=$(echo "$ANSVER" | cut -d '.' -f 2)
if [ "$ANSVER1" -le 1 -a "$ANSVER2" -lt 9 ]; then
	echo "Requires at least Ansible 1.9, found $ANSVER instead."
	exit 1
fi

# parse parameters
help="Usage: $0 vm    [ANSIBLE_OPT]\n       $0 <ENV> <SSH_USERNAME> <SECRET_FILE> <ENV PATH> [ANSIBLE_OPT]"
if [ "$#" -eq 0 ]
then
  echo -e "$help"
  exit 1
fi

env=$1
shift

if [ "$env" = "vm" ]
then
	user="vagrant"
	secret="environments/vm/secrets/vm.yml"
	environment_dir="environments/vm/"
elif [ $# -lt 3 ]
then
	echo -e "$help"
	exit 1
else
	user=$2
	secret=$3
	environment_dir="environments-external/$env/"
	shift; shift
fi

# find matching playbook
playbook="provision.yml"
#listcontains "$env" "vm" &&  playbook="provision-vm.yml"

# find inventory
if [ $env = "vm" ] || [ $env = "docker" ] || [ $env = "template" ]
then
	inventory="environments/$env/inventory"
else
	inventory="environments-external/$env/inventory"
fi

if ! [ -e $inventory ]
then
	echo "Inventory file '$inventory' for environment '$env' not found."
	exit 1
fi

# run vm
if [ "$env" = "vm" ]
then
  vagrant up
fi

# run ansible
if [ $env = "vm" ] || [ $env = "docker" ] || [ $env = "template" ]
then
        echo "executing: ansible-playbook -i \"$inventory\" -u \"$user\"  \"$playbook\" --extra-vars=\"secrets_file=$secret environment_dir=$environment_dir\"$@"
        ansible-playbook -i "$inventory" -u "$user" "$playbook" --extra-vars="secrets_file=$secret -e environment_dir=$environment_dir" $@
else
	echo "executing: ansible-playbook -i \"$inventory\" -u \"$user\" -K  \"$playbook\" --extra-vars=\"secrets_file=$secret environment_dir=$environment_dir\"$@"
        ansible-playbook -i "$inventory" -u "$user" -K "$playbook" --extra-vars="secrets_file=$secret -e environment_dir=$environment_dir" $@
fi

