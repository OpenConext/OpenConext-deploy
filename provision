#!/bin/bash
set -e

# helper function: check if a specified value is present in a space-separted list
listcontains() {
	match=$1
	shift
	for word in $@
	do
		[[ $word = $match ]] && return 0
	done
	return 1
}

# check ansible
ANSVER=$(ansible --version|head -1|cut -d " " -f 2)
ANSVER1=$(echo "$ANSVER" | cut -d '.' -f 1)
ANSVER2=$(echo "$ANSVER" | cut -d '.' -f 2)
if [ "$ANSVER1" -le 1 -a "$ANSVER2" -lt 9 ]; then
	echo "Requires at least Ansible 1.9, found $ANSVER instead."
	exit 1
fi

# parse parameters
help="Usage: $0 vm    [ANSIBLE_OPT]\n       $0 <ENV> <SSH_USERNAME> <SECRET_FILE> [ANSIBLE_OPT]"
if [ "$#" -eq 0 ]
then
  echo -e "$help"
  exit 1
fi

env=$1
shift

if [ "$env" = "vm" ]
then
	user="vagrant"
	secret="environments/vm/secrets/vm.yml"
elif [ $# -lt 3 ]
then
	echo -e "$help"
	exit 1
else
	# check environment
	known_envs='vm acc prod  '
	if ! listcontains "$env" ${known_envs}
	then
	  echo "The environment '$env' is unknown ";
	  exit 1
	fi

	user=$1
	secret=$2
	shift; shift
fi

FULL=" minimal_install=0"
if [ "$1" = "--minimal" ]
then
    FULL=" minimal_install=1"
fi

# find matching playbook
playbook="provision.yml"
listcontains "$env" "vm"            &&  playbook="provision-vm.yml"

# find inventory
inventory="environments/$env/inventory"
if ! [ -e $inventory ]
then
	echo "Inventory file '$inventory' for environment '$env' not found."
	exit 1
fi

# run vm
#if [ "$env" = "vm" ]
#then
#	vagrant up
#fi

# run ansible
#echo "executing: ansible-playbook -i \"$inventory\" -u \"$user\" -K \"$playbook\" --extra-vars=\"secrets_file=$secret$FULL\" $@"
#exec ansible-playbook -i "$inventory" -u "$user" -K "$playbook" --extra-vars="secrets_file=$secret$FULL" $@
