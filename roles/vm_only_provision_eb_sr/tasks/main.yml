---
- name: Create directory for database backups
  file: state=directory path=/opt/OCbackups owner=root group=root

- name: Backup current database
  shell: "mysqldump -u root -p{{ mysql_root_password }} --force --comment --set-charset --default-character-set=utf8 --databases {{ janus_database_name }} {{ engine_database_name }} > /opt/OCbackups/sr+eb.$(date +%Y%m%d_%H%M%S).sql"


- name: register api crt content
  sudo: False
  local_action: "shell awk ' /^-----BEGIN CERT/,/^-----END CERT/ { if ($0 !~ /^-/) printf $0 }; ' files/java-{{ env }}/certs/api.crt"
  register: api_crt_content
  changed_when: False

- name: register apis crt content
  sudo: False
  local_action: "shell awk ' /^-----BEGIN CERT/,/^-----END CERT/ { if ($0 !~ /^-/) printf $0 }; ' files/java-{{ env }}/certs/apis.crt"
  register: apis_crt_content
  changed_when: False

- name: copy load sql
  template: src={{ item }}.j2 dest=/tmp/{{ item }}
  with_items:
    - engineblock.sql
    - serviceregistry.sql
    - virtual_organization.sql

- name: run load engineblock sql
  shell: mysql -u {{ item.db_user }} -p{{ item.db_password }} -h {{ mysql_host }} -D {{ item.db_name }} < /tmp/{{ item.sql }}
  with_items:
    - { db_user: "{{ engine_database_user }}", db_password: "{{ engine_database_password }}", db_name: "{{ engine_database_name }}", sql: engineblock.sql }
    - { db_user: "{{ janus_database_user }}", db_password: "{{ janus_database_password }}", db_name: "{{ janus_database_name }}", sql: serviceregistry.sql }
    - { db_user: "{{ engine_database_user }}", db_password: "{{ engine_database_password }}", db_name: "{{ engine_database_name }}", sql: virtual_organization.sql }
  register: eb_sr_sql
