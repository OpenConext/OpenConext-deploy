---
# In this task file a ca key and certificate are created 
# and saved on localhost. These are used for signing certificates for
# each individual mongo server in the cluster (in certs.yml)
# This works for new mongo servers, changing the ca and certificates 
# on mongoservers with this role is not tested.
- name: Create mongo key dir in the environment repo
  ansible.builtin.file:
    path: "{{ inventory_dir }}/secrets/mongo/"
    state: directory
    mode: "0750"

- name: Check if we have a CA in the environments repo
  ansible.builtin.stat:
    path: "{{ inventory_dir }}/secrets/mongo/mongoca.key"
  register: mongo_ca_key

- name: Create private key with password protection
  community.crypto.openssl_privatekey:
    path: "{{ inventory_dir }}/secrets/mongo/mongoca.key"
    passphrase: "{{ mongo_ca_passphrase }}"
    cipher: auto
  when: not mongo_ca_key.stat.exists

- name: Create certificate signing request (CSR) for CA certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ inventory_dir }}/secrets/mongo/mongoca.key"
    privatekey_passphrase: "{{ mongo_ca_passphrase }}"
    common_name: Mongo {{ env }} CA
    use_common_name_for_san: false  # since we do not specify SANs, don't use CN as a SAN
    basic_constraints:
      - 'CA:TRUE'
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
    key_usage_critical: true
  register: ca_csr
  when: not mongo_ca_key.stat.exists

- name: Create self-signed CA certificate from CSR
  community.crypto.x509_certificate:
    path: "{{ inventory_dir}}/secrets/mongo/mongoca.pem"
    csr_content: "{{ ca_csr.csr }}"
    privatekey_path: "{{ inventory_dir }}/secrets/mongo/mongoca.key"
    privatekey_passphrase: "{{ mongo_ca_passphrase }}"
    provider: selfsigned
  when: not mongo_ca_key.stat.exists
