---
- name: Create user
  user:
    name: authz-admin
    system: yes
    home: "{{ authz_admin_dir }}"
    shell: /sbin/nologin

- name: Copy systemd service file
  template:
    src: "templates/spring-boot.service.j2"
    dest: "/etc/systemd/system/{{ springapp_service_name }}.service"
  notify:
    - "restart authz-admin"

- name: Check presence of legacy init script
  stat:
    path: "/etc/init.d/{{ springapp_service_name }}"
  register: legacy_authz_admin_present

- name: Stop service when legacy init script is present
  service:
    name: "{{ springapp_service_name }}"
    state: stopped
  when:
    - legacy_authz_admin_present.stat.exists

- name: Clean up legacy init script
  file:
    path: "/etc/init.d/{{ springapp_service_name }}"
    state: absent

- name: enable authz-admin service
  service:
    name: authz-admin
    enabled: yes

- name: Create logging directory
  file:
    path: "/var/log/{{ springapp_service_name }}"
    state: directory
    owner: authz-admin
    group: authz-admin
    mode: 0755

- name: Include install-release.yml
  include: ../../../tasks/springbootapp/install-release.yml
  when:
    - "authz_admin_snapshot_timestamp == '' and authz_admin_local_jar == ''"

- name: Include install-snapshot.yml
  include: ../../../tasks/springbootapp/install-snapshot.yml
  when:
    - "authz_admin_snapshot_timestamp != '' and authz_admin_local_jar == ''"

- name: Include install-local.yml
  include: ../../../tasks/springbootapp/install-local.yml
  when:
    - "authz_admin_local_jar != ''"

- name: Copy logging config
  template:
    src: "logback.xml.j2"
    dest: "{{ authz_admin_dir }}/logback.xml"
    owner: authz-admin
    group: authz-admin
    mode: 0740
  notify:
    - "restart authz-admin"

- name: Copy application config
  template:
    src: "application.properties.j2"
    dest: "{{ authz_admin_dir }}/application.properties"
    owner: authz-admin
    group: authz-admin
    mode: 0740
  notify:
    - "restart authz-admin"

- name: Copy config for default clients and resource servers
  template:
    src: "clientsAndResources.conf.j2"
    dest: "{{ authz_admin_dir }}/clientsAndResources.conf"
    owner: authz-admin
    group: authz-admin
    mode: 0740
  notify:
    - "restart authz-admin"

- name: copy apache config
  template:
    src: "authz_admin.conf.j2"
    dest: "/etc/httpd/conf.d/authz_admin.conf"
  notify:
    - "reload httpd"

- name: ensure the service is started
  service:
    name: authz-admin
    enabled: yes
    state: started

- name: cleanup old jars
  shell: 'find . ! -name $(basename $(readlink authz-admin-current.jar)) -name "*.jar" -type f -printf "%T@  %p\n"  | sort -rn | awk ''{print $2}'' | tail -n +2 | xargs --no-run-if-empty rm -v'
  args:
    chdir: "{{ authz_admin_dir }}"
  register: clean_authz_admin_jars
  changed_when: '"removed" in clean_authz_admin_jars'

