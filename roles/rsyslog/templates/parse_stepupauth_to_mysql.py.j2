#!/usr/bin/python2
# This script parses the files produced by the stepup gateway and inserts them into a mySQL table where the stats module can analyse the data further
# This script is intended to be used during logrotate
# It picks up all files starting with stepup-authentication.log- (all rotated files) and parses them

import os
import sys
import shutil
import json
import MySQLdb
from datetime import datetime

mysql_host="{{ item.db_loglogins_host }}"
mysql_user="{{ item.db_loglogins_user }}"
mysql_password="{{ item.db_loglogins_password }}"
mysql_db="{{ item.db_loglogins_name }}"
workdir="{{ rsyslog_dir }}/log_logins/{{ item.name}}/"

db = MySQLdb.connect(mysql_host,mysql_user,mysql_password,mysql_db )
cursor = db.cursor()
def load_in_mysql(a,b):
    sql = """insert into log_logins_stepup(loginstamp,userid) values(%s,%s)"""
    try:
      cursor.execute(sql, (a,b))
      db.commit()
    except:
      db.rollback()
      print(sql, (a,b))


def parse_lines(a):
  input_file = open((a), 'r')
  for line in input_file:
     try:
        jsonline = line.split(']:',2)[1]
        data = json.loads(jsonline)
     except:
        continue
     user_id = data["_ctxt_identity_id"]
     timestamp = data["timestamp"]
     loginstamp=datetime.fromtimestamp(timestamp)
     load_in_mysql(loginstamp,user_id)

## Loop over the files and parse them one by one
for filename in os.listdir(workdir):
  if os.path.isfile(workdir+filename) and filename.startswith("stepup-authentication.log-") and not filename.endswith(".gz"):
      filetoparse=(os.path.join(workdir, filename))
      parse_lines(filetoparse)
  else:
      continue

cursor.close()
db.close()
