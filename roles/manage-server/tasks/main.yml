---
- name: Import the mongo CA file
  copy:
    src: "{{ inventory_dir }}/files/certs/mongo/{{ mongo_tls_ca }}"
    dest: "{{ tls.cert_path_ca }}/"
  when:
    - mongo_tls | bool

- name: Update the ca trust store
  command: /bin/update-ca-trust
  changed_when: False

- name: create user
  user:
    name: manage
    system: yes
    home: "{{ manage_dir }}"
    shell: /sbin/nologin

- name: Copy systemd service file
  template:
    src: "../../templates/spring-boot.service.j2"
    dest: "/etc/systemd/system/{{ springapp_service_name }}.service"
  notify:
    - "restart manage"

- name: enable service
  service:
    name: manage
    enabled: yes

- name: Create logging directory
  file:
    path: "/var/log/{{ springapp_service_name }}"
    state: directory
    owner: manage
    group: manage
    mode: 0755

- name: Include install-maven-release.yml
  include: ../../../tasks/springbootapp/install-maven-release.yml
  when:
    - "manage_local_jar == ''"

- name: Include install-local.yml
  include: ../../../tasks/springbootapp/install-local.yml
  when:
    - "manage_local_jar != ''"

- name: copy logging config
  template:
    src: "logback.xml.j2"
    dest: "{{ manage_dir }}/logback.xml"
    owner: manage
    group: manage
    mode: 0740
  notify:
    - "restart manage"

- name: copy application config
  template:
    src: "application.yml.j2"
    dest: "{{ manage_dir }}/application.yml"
    owner: manage
    group: manage
    mode: 0740
  notify:
    - "restart manage"

- name: copy api users
  template:
    src: "manage-api-users.yml.j2"
    dest: "{{ manage_dir }}/manage-api-users.yml"
    owner: manage
    group: manage
    mode: 0740
  notify:
    - "restart manage"

- name: Create metadata configuration directory
  file:
    path: "{{ manage_dir }}/metadata_configuration"
    state: directory
    owner: manage
    group: manage
    mode: 0740

- name: copy and template metadata configuration
  template:
    src: "{{ item }}"
    dest: '{{ manage_dir }}/metadata_configuration/{{ item | basename | regex_replace("\.j2","") }}'
    owner: manage
    group: manage
    mode: 0640
  with_fileglob: "metadata_configuration/*.j2"
  tags: deploy
  notify:
    - "restart manage"

- name: Create metadata export directory
  file:
    path: "{{ manage_dir }}/metadata_export"
    state: directory
    owner: manage
    group: manage
    mode: 0740

- name: copy metadata export
  copy:
    src: metadata_export
    dest: "{{ manage_dir }}"
    owner: manage
    group: manage
    mode: 0640
  tags:
    - deploy
  notify:
    - "restart manage"

- name: Create metadata templates directory
  file:
    path: "{{ manage_dir }}/metadata_templates"
    state: directory
    owner: manage
    group: manage
    mode: 0740

- name: copy metadata templates
  copy:
    src: "metadata_templates"
    dest: "{{ manage_dir }}"
    owner: manage
    group: manage
    mode: 0640
  tags:
    - deploy
  notify:
    - "restart manage"

# no idea why this is necessary, as the init script returns an ok status also
# if manage is still initializing.  Waiting for the port to open works well
# though, and seems like to correct way to handle this.
- name: start the manage service
  service:
    name: manage
    state: started
    enabled: yes
  ignore_errors: true

- name: wait for manage to start
  wait_for:
    connect_timeout: 30
    port: "{{ springapp_tcpport }}"
    state: started

- name: ensure the service is started
  service:
    name: manage
    enabled: yes
    state: started

- name: cleanup old jars
  shell: find . ! -name $(basename $(readlink manage-current.jar)) -name '*.jar' -type f -exec rm {} \; chdir={{ manage_dir }}
  when: maven_result.changed
