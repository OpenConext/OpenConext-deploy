{
    "displayName": {
    "en": "The display name for this connection, overrides the 'name' in WAYFs."
    },
    "coin_gadgetbaseurl": {
    "en": "Used to lookup the OAuth parameters belonging to a gadget. Format is a regular expression matching the URL of the gadget's XML descriptor. Example: https://gadgets.store.com/.* Also used when Shindig acts as the provider in 2-legged OAuth"
    },
    "coin_oauthcret": {
    "en": "When Shindig acts as the provider in 2- or 3-legged OAuth with keytype HMAC_SHA1, this is the secret. Not used when Shindig is the consumer."
    },
    "coin_oauth_consumer_key": {
    "en": "When Shindig acts as the consumer in 3-legged OAuth with keytype HMAC_SHA1 or RSA_PRIVATE, this is the consumer key. When Shindig is the provider, this should be a URL matching the consumer (see coin_gadgetbaseurl)."
    },
    "coin_oauth_consumer_secret": {
    "en": "When Shindig acts as the consumer in 3-legged OAuth with keytype HMAC_SHA1, this is the consumer secret. When using keytype RSA_PRIVATE, this entry is not necessary but needs to be filled anyway (use a dummy value). Leave blank when Shindig is the provider"
    },
    "coin_oauth_key_type": {
    "en": "The OAuth key type."
    },
    "coin_oauth_public_key": {
    "en": "When Shindig acts as the provider in 3-legged OAuth with keytype RSA_PRIVATE, this is the consumer's public key."
    },
    "coin_oauth_app_title": {
    "en": "OAuth application title. Displayed to a user when he has to authorize the data request. Only used in 3-legged OAuth when Shindig is the data provider."
    },
    "coin_oauth_app_description": {
    "en": "OAuth application description. Displayed to a user when he has to authorize the data request. Only used in 3-legged OAuth when Shindig is the data provider."
    },
    "coin_oauth_app_thumbnail": {
    "en": "The URL of the OAuth application logo image. This URL must be accessible from the internet. Displayed to a user when he has to authorize the data request. Only used in 3-legged OAuth when Shindig is the data provider."
    },
    "coin_oauth_app_icon": {
    "en": "The URL of the OAuth application icon image. This URL must be accessible from the internet. Displayed to a user when he has to authorize the data request. Only used in 3-legged OAuth when Shindig is the data provider."
    },
    "coin_oauth_callback_url": {
    "en": "The OAuth callback URL"
    },
    "coin_is_provision_sp": {
    "en": "Indicates if this Service Provider needs JIT provisioning. If it is absent or not checked then NOTHING will be provisioned"
    },
    "coin_provision_domain": {
    "en": "The domain for which users and groups will be provisioned. It is optional but needed for the Google provisioning implementation"
    },
    "coin_provision_admin": {
    "en": "The username of the 'power' user that can create users and groups"
    },
    "coin_provision_password": {
    "en": "The password of the power user"
    },
    "coin_provision_type": {
    "en": "The type of provisioning. Currently only Google is implemented"
    },
    "coin_userContactPoint_url": {
    "en": "URL of the Service Provider help desk website for an end user"
    },
    "coin_userContactPoint_emailAddress": {
    "en": "Service Provider help desk email address for an end user"
    },
    "coin_guest_qualifier": {
    "en": "Can have the value None, Some or All. Indicates that no users from this IDP are marked as guest, some users are marked as guest or all users are marked as guest respectively"
    },
    "coin_alternate_private_key": {
    "en": "Overrides the private signing key used by SURFconext for this Service Provider"
    },
    "coin_alternate_public_key": {
    "en": "Overrides the public signing key used by SURFconext for this Service Provider"
    },
    "coin_consent_required": {
    "en": "Demand that users do not have to give consent to release their personal information"
    },
    "coin_eula": {
    "en": "URL of the End User License Agreement for the service."
    },
    "coin_provide_is_member_of": {
    "en": "Provide SAML attribute isMemberOf containing all groups a person is a member of (note: resource intensive depending on number of groups)"
    },
    "logo_url": {
    "en": "The URL of the IDPs logo image. This URL must be accessible from the public internet."
    },
    "logo_width": {
    "en": "The width of the IDPs logo image. Cannot be wider then 108px for SURFconext. Required for MDUI export."
    },
    "logo_height": {
    "en": "The height of the IDPs logo image. Cannot be higher then 48px for SURFconext. Required for MDUI export."
    },
    "keywords": {
    "en": "Space separated list of keywords users can search on in the WAYF screen"
    },
    "coin_do_not_add_attribute_aliases": {
    "en": "Do not add aliases of attributes (default: Unchecked). Eg: Unset/unchecked gives both urn:mace:dir:attribute-def:cn and urn:oid:2.5.4.3. Checked gives only urn:mace:dir:attribute-def:cn."
    },
    "coin_hidden": {
    "en": "Hide from metadata"
    },
    "coin_trusted_proxy": {
        "en": "Enable to allow this SP to act as a trusted proxy. A trusted proxy is allowed to handle authentication on behalf of other SPs."
    },
    "coin_entity_categories": {
        "en": "Entity Category supported by this entity, to be advertised in metadata."
    }
}
