---
- name: create user
  user:
    name: oidc-playground
    system: yes
    home: "{{ oidc_playground_dir }}"
    shell: /sbin/nologin

- name: Copy systemd service file
  template:
    src: "../../templates/spring-boot.service.j2"
    dest: "/etc/systemd/system/{{ springapp_service_name }}.service"
  notify:
    - "restart oidc-playground"

- name: enable service
  service:
    name: oidc-playground
    enabled: yes

- name: Create logging directory
  file:
    path: "/var/log/{{ springapp_service_name }}"
    state: directory
    owner: oidc-playground
    group: oidc-playground
    mode: 0755

- name: Include install-maven-release.yml
  include: ../../../tasks/springbootapp/install-maven-release.yml
  when:
    - "oidc_playground_local_jar == ''"

- name: Include install-local.yml
  include: ../../../tasks/springbootapp/install-local.yml
  when:
    - "oidc_playground_local_jar != ''"

- name: copy logging config
  template:
    src: "logback.xml.j2"
    dest: "{{ oidc_playground_dir }}/logback.xml"
    owner: oidc-playground
    group: oidc-playground
    mode: 0740
  notify:
    - "restart oidc-playground"

- name: copy application config
  template:
    src: "application.yml.j2"
    dest: "{{ oidc_playground_dir }}/application.yml"
    owner: oidc-playground
    group: oidc-playground
    mode: 0740
  notify:
    - "restart oidc-playground"

- name: start the oidc-playground service
  service:
    name: oidc-playground
    state: started
    enabled: yes
  ignore_errors: true

- name: wait for oidc-playground to start
  wait_for:
    connect_timeout: 30
    port: "{{ springapp_tcpport }}"
    state: started

- name: ensure the service is started
  service:
    name: oidc-playground
    enabled: yes
    state: started

- name: cleanup old jars
  shell: find . ! -name $(basename $(readlink oidc-playground-current.jar)) -name '*.jar' -type f -exec rm {} \; chdir={{ oidc_playground_dir }}
  when: maven_result.changed
