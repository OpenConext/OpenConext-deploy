---
- name: Create directory to keep configfile
  ansible.builtin.file:
    dest: "/opt/openconext/dashboard"
    state: directory
    owner: root
    group: root
    mode: "0770"

- name: Place the serverapplication configfiles
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: /opt/openconext/dashboard/{{ item }}
    owner: root
    group: root
    mode: "0644"
  with_items:
    - serverapplication.yml
    - logback.xml
    - dashboard.conf
  notify: restart dashboardserver

- name: Create and start the server container
  community.docker.docker_container:
    name: dashboardserver
    image: ghcr.io/openconext/openconext-dashboard/dashboard-server:{{ dashboard_server_version }}
    pull: true
    restart_policy: "always"
    state: started
    networks:
      - name: "loadbalancer"
    mounts:
      - source: /opt/openconext/dashboard/serverapplication.yml
        target: /application.properties
        type: bind
      - source: /opt/openconext/dashboard/logback.xml
        target: /logback.xml
        type: bind
    command: "-Xmx512m --spring.config.location=./"
    etc_hosts:
      host.docker.internal: host-gateway
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/internal/health",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
  notify: restart dashboardserver

- name: Create the gui container
  community.docker.docker_container:
    name: dashboardgui
    image: ghcr.io/openconext/openconext-dashboard/dashboard-gui:{{ dashboard_gui_version }}
    pull: true
    restart_policy: "always"
    state: started
    networks:
      - name: "loadbalancer"
    labels:
      traefik.http.routers.dashboardgui.rule: "Host(`dashboard.{{ base_domain }}`)"
      traefik.http.routers.dashboardgui.tls: "true"
      traefik.enable: "true"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost/internal/health"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    hostname: dashboard
    env:
      HTTPD_CSP: "{{ httpd_csp.lenient_with_static_img }}"
      HTTPD_SERVERNAME: "dashboard.{{ base_domain }}"
      OPENCONEXT_INSTANCENAME: "{{ instance_name }}"
      OPENCONEXT_ENGINE_LOGOUT_URL: "https://engine.{{ base_domain }}/logout"
      OPENCONEXT_HELP_EMAIL: "{{ support_email }}"
      SHIB_ENTITYID: "https://dashboard.{{ base_domain }}/shibboleth"
      SHIB_REMOTE_ENTITYID: "https://engine.{{ base_domain }}/authentication/idp/metadata"
      SHIB_REMOTE_METADATA: "{{ shibboleth_metadata_sources.engine }}"
