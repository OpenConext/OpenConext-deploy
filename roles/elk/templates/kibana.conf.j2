{% if apache_app_listen_address.kibana is defined %}
Listen {{ apache_app_listen_address.kibana }}:{{ loadbalancing.kibana.port }}
<Virtualhost {{ apache_app_listen_address.kibana }}:{{ loadbalancing.kibana.port }}> 
{% else %}
<Virtualhost *:443 >
{% endif %}

        ServerName https://{{ kibana_server_name }}
        ProxyPass /health !
        ProxyPass /  http://127.0.0.1:5601/
        ProxyPassReverse / http://127.0.0.1:5601/
        <Location "/health">
             allow from all
             satisfy any
        </Location>

        OIDCProviderMetadataURL https://{{ kibana_oidc_url }}/.well-known/openid-configuration
        OIDCClientID {{ kibana_oidc_clientid }}
        OIDCClientSecret {{ kibana_oidc_secret }}
        OIDCRedirectURI https://{{ kibana_server_name }}/redirect
        OIDCCryptoPassphrase {{ kibana_oidc_crypto_passphrase }}
        OIDCScope "openid"
        OIDCResponseType "code"
        OIDCSessionInactivityTimeout 3600

        <Location />
              AuthType openid-connect
              Require valid-user
        </Location>

{% if kibana_standalone %}
        SSLEngine on
        SSLCertificateFile      {{ kibana_tls_cert_path }}
        SSLCertificateKeyFile   {{ kibana_tls_key_path }}
        SSLCertificateChainFile {{ kibana_tls_chain_path }}
        Include ssl_backend.conf

        Header always set Strict-Transport-Security "max-age=31556952"
        Header set X-Frame-Options "DENY"
        Header always set X-Content-Type-Options "nosniff"
        Header always set X-Xss-Protection "1; mode=block"
        Header set Referrer-Policy "same-origin"
{% endif %}

        ErrorLog "|/usr/bin/logger -p local3.err  -t 'Apache-Kibana'"
        CustomLog "|/usr/bin/logger -p local3.info  -t 'Apache-Kibana'" combined
</VirtualHost>
