{
  "issuer": "https://{{ oidcng_base_hostname }}",
  "authorization_endpoint": "https://{{ oidcng_base_hostname }}/oidc/authorize",
  "token_endpoint": "https://{{ oidcng_base_hostname }}/oidc/token",
  "userinfo_endpoint": "https://{{ oidcng_base_hostname }}/oidc/userinfo",
  "introspect_endpoint": "https://{{ oidcng_base_hostname }}/oidc/introspect",
  "jwks_uri": "https://{{ oidcng_base_hostname }}/oidc/certs",
  "response_types_supported": [
    "code",
    "token",
    "id_token",
    "code token",
    "code id_token",
    "token id_token",
    "code token id_token"
  ],
  "response_modes_supported": [
    "fragment",
    "query",
    "form_post"
  ],
  "grant_types_supported": [
    "authorization_code",
    "implicit",
    "refresh_token",
    "client_credentials"
  ],
  "subject_types_supported": [
    "public",
    "pairwise"
  ],
  "id_token_signing_alg_values_supported": [
    "RS256"
  ],
  "scopes_supported": [
    "openid",
    "groups",
    "profile",
    "email",
    "address",
    "phone"
  ],
  "token_endpoint_auth_methods_supported": [
    "client_secret_basic",
    "client_secret_post",
    "client_secret_jwt",
    "private_key_jwt"
  ],
  "claims_supported": [
    "aud",
    "nbf",
    "iss",
    "exp",
    "iat",
    "jti",
    "nonce",
    "at_hash",
    "c_hash",
    "s_hash",
    "at_hash",
    "auth_time",
    "sub",
    "edumember_is_member_of",
    "eduperson_affiliation",
    "eduperson_entitlement",
    "eduperson_principal_name",
    "eduperson_scoped_affiliation",
    "email",
    "email_verified",
    "family_name",
    "given_name",
    "name",
    "nickname",
    "preferred_username",
    "schac_home_organization",
    "schac_home_organization_type",
    "schac_personal_unique_code",
    "eduperson_orcid",
    "eckid",
    "surf-crm-id",
    "uids"
  ],
  "claims_parameter_supported": true,
  "request_parameter_supported": true,
  "request_uri_parameter_supported": true,
  "acr_values_supported": [
     {% for loa in oidcng.acr_values_supported %}
        "{{ loa }}"{{ "," if not loop.last else ""}}
     {% endfor %}
  ],
  "code_challenge_methods_supported": [
    "plain",
    "S256"
  ]
}
