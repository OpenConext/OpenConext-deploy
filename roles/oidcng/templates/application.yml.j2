# The logging configuration.
logging:
  config: file://{{ oidcng_config_dir }}/logback.xml
  level:
    org.springframework: WARN
    oidc: WARN

# Is this node in a load-balanced topology responsible for cleaning up resources
cron:
  node-cron-job-responsible: {{ oidcng_cronjobmaster }}
  # Every 15 minutes
  token-cleaner-expression: "0 0/15 * * * *"
  # Differs per env: see https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html
  key-rollover-expression: {{ oidcng.key_rollover_cron_expression }}
  consent-expiry-duration-days: 90

keys-cache:
  # The max-age cache control for signing keys in seconds
  cache-duration-seconds: 3600
  # The time in seconds where new signing keys are published, but not used
  idle-time-seconds: 7200

server:
  # The port to where this Spring Boot application listens to.
  port: 8080
  error:
    path: "/error"
  server-header:
  servlet:
    # We serve from the root. Do not change this
    context-path:
    session:
      timeout: 28800
      cookie:
        secure: true
  max-http-header-size: 10000000
  tomcat:
    max-http-form-post-size: 10000000
    max-swallow-size: 10000000

mongodb_db: {{ oidcng.mongo_database }}
oidc_saml_mapping_path: file://{{ oidcng_config_dir }}/oidc_saml_mapping.json
openid_configuration_path: file://{{ oidcng_config_dir }}/openid-configuration.json
secret_key_set_path: file://{{ oidcng_config_dir }}/secret_keyset.json
associated_data: {{ oidcng_associated_data }}
access_token_one_way_hash_salt: {{ oidcng_access_token_one_way_hash_salt }}
private_key_path: file://{{ oidcng_config_dir }}/oidcsaml.key
certificate_path: file://{{ oidcng_config_dir }}/oidcsaml.crt
default_acr_value: {{ oidcng.default_acr_value }}
secure_cookie: true
oidc_token_endpoint: https://connect.{{ base_domain }}/oidc/token
environment: {{ oidcng.environment }}

features:
  # Do we enforce that the RS - if eduID pseudonymisation is required - belongs to the IdP linked to the eduID user account?
  # We link RS's and IdP's using the coin:institution-guid
  enforce-eduid-resource-server-linked-account: false
  # Do we enforce that the scopes granted to an access_token are configured with the RS?
  enforce-scope-resource-server: false
  # Do we show consent if configured for a RP in manage
  consent-enabled: {{ oidcng.consent_enabled }}

sp:
  entity_id: {{ oidcng_saml_sp_entityid }}
  acs_location: https://{{ oidcng_base_hostname }}/login/saml2/sso/oidcng

idp:
  entity_id: https://engine.{{ base_domain }}/authentication/idp/metadata
  sso_location: {{ oidcng_idp_sso_location }}
  saml_assertion_signing_key: file://{{ oidcng_config_dir }}/SURFconext-metadata-signer.pem

spring:
  data:
    mongodb:
      uri: "mongodb://{{ oidcng.mongo_user }}:{{ oidcng.mongo_password }}@{% for host in groups['mongo_servers'] %}{{ hostvars[host]['inventory_hostname'] }}:{{ oidcng.mongo_port }}{% if not loop.last %},{% endif %}{%endfor %}/{{ oidcng.mongo_database }}?ssl=true"

  thymeleaf:
    cache: true

manage:
  user: manage
  password: "{{ oidcng_api_metadata_push_password }}"

token-api:
  enabled: {{ oidcng.token_api_enabled }}
  users:
    - user: eduid
      password: "{{ oidcng_api_tokens_eduid_password }}"
    - user: profile
      password: "{{ oidcng_api_tokens_profile_password }}"

eduid:
  user: oidcng
  password: "{{ myconext_api_attribute_manipulation_password }}"
  uri: "https://login.{{ myconext_base_domain }}/myconext/api/attribute-manipulation"
  enabled: {{ oidcng.eduid_attribute_manipulation_enabled }}


management:
  health:
    mail:
      enabled: false
  endpoints:
    web:
      exposure:
        include: "health,info,mappings"
      base-path: "/internal"
  endpoint:
    info:
      enabled: true
    mappings:
      enabled: true
  info:
    git:
      mode: full

# used by the git plugin
info:
  build:
    artifact: "@project.artifactId@"
    version: "@project.version@"
