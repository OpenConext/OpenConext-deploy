---
- name: create user
  user:
    name: oidcng
    system: yes
    home: "{{ oidcng_dir }}"
    shell: /sbin/nologin

- name: Copy systemd service file
  template:
    src: "../../templates/spring-boot.service.j2"
    dest: "/etc/systemd/system/{{ springapp_service_name }}.service"
  notify:
    - "systemctl daemon-reload"
    - "restart oidcng"

- name: enable service
  service:
    name: oidcng
    enabled: yes

- name: Create logging directory
  file:
    path: "/var/log/{{ springapp_service_name }}"
    state: directory
    owner: oidcng
    group: oidcng
    mode: 0755

- include: ../../../tasks/springbootapp/install-maven-release.yml

- name: copy logging config
  template:
    src: "logback.xml.j2"
    dest: "{{ oidcng_dir }}/logback.xml"
    owner: root
    group: oidcng
    mode: 0740
  notify:
    - "restart oidcng"

- name: copy application config
  template:
    src: "application.yml.j2"
    dest: "{{ oidcng_dir }}/application.yml"
    owner: "root"
    group: "oidcng"
    mode: 0740
  notify:
    - "restart oidcng"

- name: copy oidcng secret keyset configuration
  template:
    src: "secret_keyset.json.j2"
    dest: "{{ oidcng_dir }}/secret_keyset.json"
  notify:
    - "restart oidcng"

- name: copy oidcng well-known discovery configuration
  template:
    src: "openid-configuration.json.j2"
    dest: "{{ oidcng_dir }}/openid-configuration.json"
  notify:
    - "restart oidcng"

- name: copy application config
  copy:
    src: oidc_saml_mapping.json
    dest: "{{ oidcng_dir }}"
    owner: "root"
    group: "oidcng"
    mode: 0740
  notify:
    - "restart oidcng"

- name: copy / create private key
  copy:
    content: "{{ oidcng_private_key }}"
    dest: "{{ oidcng_dir }}/oidcsaml.key"
    owner: "root"
    group: "oidcng"
    mode: 0740
  notify:
    - "restart oidcng"

- name: copy / create certificate
  copy:
    src: "{{ inventory_dir }}/files/certs/oidc/oidcsaml.crt"
    dest: "{{ oidcng_dir }}/oidcsaml.crt"
    owner: "root"
    group: "oidcng"
    mode: 0740
  notify:
    - "restart oidcng"

- name: copy / create metatdata signing certificate
  copy:
    src: "{{ inventory_dir }}/files/certs/oidcng/SURFconext-metadata-signer.pem"
    dest: "{{ oidcng_dir }}/SURFconext-metadata-signer.pem"
    owner: "root"
    group: "oidcng"
    mode: 0740
  notify:
    - "restart oidcng"

- name: copy apache config
  template:
    src: "oidcng.conf.j2"
    dest: "/etc/httpd/conf.d/oidcng.conf"
  notify:
    - "reload httpd"

- name: start the oidcng service
  service:
    name: oidcng
    state: started
    enabled: yes
  ignore_errors: true

- name: wait for oidcng to start
  wait_for:
    connect_timeout: 30
    port: "{{ springapp_tcpport }}"
    state: started

- name: ensure the service is started
  service:
    name: oidcng
    enabled: yes
    state: started

- name: cleanup old jars
  shell: find . ! -name $(basename $(readlink oidcng-current.jar)) -name '*.jar' -type f -exec rm {} \; chdir={{ oidcng_dir }}
  when: maven_result.changed

- meta: flush_handlers
