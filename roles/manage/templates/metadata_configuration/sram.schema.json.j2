{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "sram",
  "order": 8,
  "definitions": {
    "AssertionConsumerService_Binding": {
      "type": "string",
      "enum": [
        "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"
      ],
      "default": "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST",
      "info": "Select the binding the SP claims support for. A binding specifies the technical method of a connection."
    },
    "NameIDFormat": {
      "type": "string",
      "enum": [
        "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
      ],
      "default": "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
      "info": "This indicates whether the nameID is set to something random or the same every time the user logs in. Use transient if user does not need to be identified in a new session."
    },
    "ArpAttribute": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "motivation": {
            "type": "string"
          },
          "release_as": {
            "type": "string"
          },
          "use_as_nameid": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    }
  },
  "type": "object",
  "properties": {
    "id": {
      "type": "number"
    },
    "eid": {
      "type": "number"
    },
    "entityid": {
      "type": "string"
    },
    "type": {
      "type": "string",
      "enum": [
        "sram"
      ]
    },
    "revisionid": {
      "type": "number"
    },
    "state": {
      "type": "string",
      "enum": [
        "prodaccepted",
        "testaccepted"
      ]
    },
    "metadataurl": {
      "type": [
        "string",
        "null"
      ]
    },
    "allowedall": {
      "type": "boolean"
    },
    "manipulation": {
      "type": [
        "string",
        "null"
      ]
    },
    "manipulationNotes": {
      "type": [
        "string",
        "null"
      ]
    },
    "user": {
      "type": "string"
    },
    "created": {
      "type": "string"
    },
    "ip": {
      "type": "string"
    },
    "revisionnote": {
      "type": "string"
    },
    "active": {
      "type": "boolean"
    },
    "allowedEntities": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      }
    },
    "autoRefresh": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "allowAll": {
          "type": "boolean"
        },
        "fields": {
          "properties": {
            "certData": {
              "type": "boolean"
            },
            "certData2": {
              "type": "boolean"
            },
            "certData3": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      }
    },
    "arp": {
      "type": "object",
      "sources": [
        "ala",
        "eduid",
        "idp",
        "invite",
        "manage",
        "orcid",
        "pseudo_email",
        "sab",
        "sabrest",
        "voot"
      ],
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "urn:mace:dir:attribute-def:eduPersonTargetedID": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.5923.1.1.1.10"
            },
            "urn:mace:dir:attribute-def:eduPersonPrincipalName": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.5923.1.1.1.6"
            },
            "urn:mace:dir:attribute-def:displayName": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:2.16.840.1.113730.3.1.241"
            },
            "urn:mace:dir:attribute-def:cn": {
              "$ref": "#/definitions/ArpAttribute",
              "description": "common name",
              "alias": "urn:oid:2.5.4.3"
            },
            "urn:mace:dir:attribute-def:givenName": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:2.5.4.42"
            },
            "urn:mace:dir:attribute-def:sn": {
              "$ref": "#/definitions/ArpAttribute",
              "description": "surname",
              "alias": "urn:oid:2.5.4.4"
            },
            "urn:mace:dir:attribute-def:mail": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:0.9.2342.19200300.100.1.3"
            },
            "urn:mace:terena.org:attribute-def:schacHomeOrganization": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.25178.1.2.9"
            },
            "urn:mace:terena.org:attribute-def:schacHomeOrganizationType": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.25178.1.2.10"
            },
            "urn:schac:attribute-def:schacPersonalUniqueCode": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.25178.1.2.14",
              "multiplicity": true
            },
            "urn:mace:dir:attribute-def:eduPersonAffiliation": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.5923.1.1.1.1",
              "multiplicity": true
            },
            "urn:mace:dir:attribute-def:eduPersonScopedAffiliation": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.5923.1.1.1.9",
              "multiplicity": true
            },
            "urn:mace:dir:attribute-def:eduPersonEntitlement": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.5923.1.1.1.7",
              "multiplicity": true
            },
            "urn:mace:dir:attribute-def:eduPersonOrcid": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.5923.1.1.1.16"
            },
            "urn:mace:dir:attribute-def:eduPersonAssurance": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.5923.1.1.1.11"
            },
            "urn:mace:surf.nl:attribute-def:eckid": {
              "$ref": "#/definitions/ArpAttribute"
            },
            "urn:mace:eduid.nl:1.1": {
              "$ref": "#/definitions/ArpAttribute",
              "description": "eduid",
              "display": "eduid"
            },
            "urn:mace:surf.nl:attribute-def:surf-crm-id": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.1076.20.100.10.50.2"
            },
            "urn:mace:dir:attribute-def:isMemberOf": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.5923.1.5.1.1",
              "multiplicity": true
            },
            "urn:mace:dir:attribute-def:uid": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:0.9.2342.19200300.100.1.1"
            },
            "urn:mace:dir:attribute-def:preferredLanguage": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:2.16.840.1.113730.3.1.39"
            },
            "urn:mace:surffederatie.nl:attribute-def:nlEduPersonOrgUnit": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.1076.20.40.20.10.1",
              "deprecated": true,
              "multiplicity": true
            },
            "urn:mace:surffederatie.nl:attribute-def:nlEduPersonStudyBranch": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.1076.20.40.20.10",
              "deprecated": true,
              "multiplicity": true
            },
            "urn:mace:surffederatie.nl:attribute-def:nlStudielinkNummer": {
              "$ref": "#/definitions/ArpAttribute",
              "alias": "urn:oid:1.3.6.1.4.1.1076.20.40.20.10.3",
              "deprecated": true
            }
          }
        }
      },
      "required": [
        "enabled",
        "attributes"
      ]
    },
    "notes": {
      "type": [
        "string",
        "null"
      ]
    },
    "metaDataFields": {
      "type": "object",
      "properties": {
        "NameIDFormat": {
          "$ref": "#/definitions/NameIDFormat"
        },
        "certData": {
          "type": "string",
          "format": "certificate",
          "info": "The supplied public certificate of the service. This must be a PEM encoded certificate. DER, CRT or CER are not supported."
        },
        "logo:0:url": {
          "type": "string",
          "format": "url",
          "info": "Enter the URL to the logo used for this service. e.g. https://static.example-logo.nl/media/sp/logo.png."
        },
        "logo:0:width": {
          "type": "number",
          "info": "The width of the logo found at logo:0:url in pixels."
        },
        "logo:0:height": {
          "type": "number",
          "info": "The height of the logo found at logo:0:url in pixels."
        },
        "redirect.sign": {
          "type": "boolean",
          "info": "Whether authentication request, logout requests and logout responses should be signed. The default is FALSE. This is generally set for trusted proxies like OpenID Connect Gateway or Stepup authentication gateway."
        },
        "coin:institution_guid": {
          "type": "string",
          "format": "uuid",
          "info": "This is a 128 bit number also known as a globally unique identifier (GUID or UUID) for this service."
        },
        "coin:no_consent_required": {
          "type": "boolean",
          "info": "Select this option to skip the consent for a user.",
          "default": true
        },
        "coin:application_url": {
          "type": "string",
          "format": "url",
          "info": "The URL of the service used to log on."
        },
        "coin:policy_enforcement_decision_required": {
          "type": "boolean",
          "info": "Set to activate the user policy engine (PDP)."
        },
        "coin:privacy:privacy_policy": {
          "type": "boolean",
          "info": "Does the SP publish an applicable privacy policy on a web page?"
        },
        "coin:privacy:privacy_policy_url": {
          "type": "string",
          "format": "url",
          "info": "The URL to the applicable privacy policy. "
        },
        "coin:signature_method": {
          "type": "string",
          "format": "url",
          "enum": [
            "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"
          ],
          "default": "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256",
          "info": "Select the Secure Hash Algorithm (SHA) to use for assertions sent by Engineblock to this service provider."
        },
        "connection_type": {
          "type": "string",
          "enum": [
            "oidc_rp",
            "saml_sp"
          ],
          "default": "oidc_rp",
          "info": "Select the protocol of the service.",
          "disabledAfterPersisted": true
        },
        "secret": {
          "type": "string",
          "format": "password",
          "info": "The secret of this Relying Party for authentication purposes - minimal length 12 characters."
        },
        "isPublicClient": {
          "type": "boolean",
          "default": false,
          "info": "Must be set for this Relying Party to be marked as a Public Client to explicitly allow the Proof Key for Code Exchange (PKCE) flow."
        },
        "accessTokenValidity": {
          "type": "number",
          "default": 3600,
          "info": "The number of seconds that a new access token is valid for this Relying Party."
        },
        "refreshTokenValidity": {
          "type": "number",
          "default": 3600,
          "info": "The number of seconds that a new refresh token is valid for this Relying Party."
        },
        "redirectUrls": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "{{ manage.oidc_rp_redirect_url_format }}"
          },
          "info": "The redirect URI's of this Relying Party."
        },
        "grants": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "authorization_code",
              "implicit",
              "refresh_token",
              "client_credentials"
            ]
          },
          "info": "The authorisation grant type's of this Relying Party."
        }
      },
      "patternProperties": {
        "^name:({{ supported_language_codes | replace(',','|') }})$": {
          "type": "string",
          "info": "Set the name of the service. Format: 'Service Name'"
        },
        "^description:({{ supported_language_codes | replace(',','|') }})$": {
          "type": "string",
          "info": "The description of the service."
        },
        "^AssertionConsumerService:([0-3]{0,1}[0-9]{1}):Binding$": {
          "$ref": "#/definitions/AssertionConsumerService_Binding",
          "multiplicity": 30,
          "info": "An Assertion Consumer Service (or ACS) the location at a ServiceProvider that accepts <samlp:Response> messages. The type of binding for this location can be selected from the pull-down."
        },
        "^AssertionConsumerService:([0-3]{0,1}[0-9]{1}):Location$": {
          "type": "string",
          "format": "url",
          "multiplicity": 30,
          "info": "An Assertion Consumer Service (or ACS) is the location at a ServiceProvider that accepts <samlp:Response> messages. A typical ACS location for an SP might look like this: https://data.example-service.nl/saml/saml2_acs/"
        },
        "^AssertionConsumerService:([0-3]{0,1}[0-9]{1}):index$": {
          "type": "number",
          "multiplicity": 30,
          "info": "An Assertion Consumer Service (or ACS) is the location at a ServiceProvider that accepts <samlp:Response> messages. With the index you can include additional <md:AssertionConsumerService> elements in the SAML 2.0 SP metadata with the same binding, each with its own unique index."
        },
        "^NameIDFormats:([0-2]{1})$": {
          "$ref": "#/definitions/NameIDFormat",
          "multiplicity": 3,
          "info": "The NameIDFormat(s) this service provider supports. This can be transient, persistent or unspecified."
        },
        "^contacts:([0-3]{1}):surName$": {
          "type": "string",
          "multiplicity": 4,
          "sibblingIndependent": true,
          "info": "The surname of the contact. e.g. for 'John Doe', 'Doe' is the surname."
        },
        "^contacts:([0-3]{1}):givenName$": {
          "type": "string",
          "multiplicity": 4,
          "sibblingIndependent": true,
          "info": "The given name of the contact. e.g. for 'John Doe', 'John' is the given name."
        },
        "^contacts:([0-3]{1}):emailAddress$": {
          "type": "string",
          "format": "local-email",
          "multiplicity": 4,
          "sibblingIndependent": true,
          "info": "The e-mail address; syntax in accordance with RFC 5322. e.g. m.l.vermeegen@university.example.org."
        },
        "^contacts:([0-3]{1}):telephoneNumber$": {
          "type": "string",
          "multiplicity": 4,
          "sibblingIndependent": true,
          "info": "The telephone number of the contact."
        },
        "^contacts:([0-3]{1}):contactType$": {
          "type": "string",
          "enum": [
            "technical",
            "support",
            "administrative",
            "billing",
            "other"
          ],
          "multiplicity": 4,
          "sibblingIndependent": true,
          "info": "From the pull down, select the type of contact."
        },
        "^OrganizationName:({{ supported_language_codes | replace(',','|') }})$": {
          "type": "string",
          "info": "The formal name of the organization. e.g. Service by University of Harderwijk."
        },
        "^url:({{ supported_language_codes | replace(',','|') }})$": {
          "type": "string",
          "format": "url",
          "info": "The URL to the support site of the service."
        }
      },
      "required": [
        "name:en",
        "connection_type",
        "OrganizationName:en",
        "AssertionConsumerService:0:Binding",
        "AssertionConsumerService:0:Location"
      ],
      "additionalProperties": false
    }
  },
  "required": [
    "entityid",
    "state",
    "allowedall",
    "metaDataFields"
  ],
  "additionalProperties": false,
  "indexes": []
}
