---
- name: Create minio files directory
  ansible.builtin.file:
    state: directory
    path: "{{ minio_dir }}"
    owner: root
    group: root
    mode: "0755"

- name: Create minio data directory
  ansible.builtin.file:
    state: directory
    path: "{{ minio_data_dir }}"
    owner: root
    group: root
    mode: "0755"

- name: Place the serverapplication configfiles
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: /opt/openconext/minio/{{ item }}
    owner: root
    group: root
    mode: "0644"
  with_items:
    - config.env
  notify: Restart minio

- name: Create and start the server container
  community.docker.docker_container:
    name: minio
    image: quay.io/minio/minio:{{ minio_version }}
    pull: true
    restart_policy: "always"
    state: started
    env:
      MINIO_CONFIG_ENV_FILE: "/etc/config.env"
    networks:
      - name: "loadbalancer"
    mounts:
      - source: "{{ minio_data_dir }}"
        target: "{{ minio_data_dir_oncontainer }}"
        type: bind
      - source: "{{ minio_dir }}/config.env"
        target: /etc/config.env
        type: bind
    command: server --console-address ":9090" {{ minio_data_dir_oncontainer }}
    exposed_ports:
      - 9000
      - 9090
    labels:
      traefik.http.routers.minio.rule: "Host(`minio.{{ base_domain }}`)"
      traefik.http.routers.minio.tls: "true"
      traefik.http.services.minio.loadbalancer.server.port: "9090"
      traefik.enable: "true"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "-no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:9000/minio/health/live",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
  register: miniocontainer
