---

- name: "{{ _springapp_service_name }}-{{ _springapp_type }} | start the {{ _springapp_service_name }} service"
  service:
    name: "{{ _springapp_service_name }}"
    state: started
    enabled: yes
    daemon_reload: yes

- name: "{{ _springapp_service_name }}-{{ _springapp_type }} | wait for {{ _springapp_service_name }} to start"
  wait_for:
    connect_timeout: 30
    timeout: 120
    port: "{{ _springapp_tcpport }}"
    state: started
  register: task_springapp_service_name
  until: task_springapp_service_name is succeeded

- name: "{{ _springapp_service_name }}-{{ _springapp_type }} | cleanup old jars"
  shell: 'find . ! -name $(basename $(readlink "{{ _springapp_dir }}/{{ _springapp_jar }}")) -name "*.jar" -type f -printf "%T@  %p\n"  | sort -rn | awk ''{print $2}'' | tail -n +2 | xargs --no-run-if-empty rm -v'
  args:
    chdir: "{{ _springapp_dir }}"
  register: clean_jars
  changed_when: '"removed" in clean_jars'

- name: "Restart 'service'"
  systemd:
    name: "{{ _springapp_service_name }}"
    state: restarted
    enabled: yes
    daemon_reload: yes
  when:
    - maven_result.changed or maven_symlink.changed
  ignore_errors: "{{ ansible_check_mode }}"
