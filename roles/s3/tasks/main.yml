---
# S3 role using SeaweedFS
# Based on https://github.com/HarryKodden/SeaWeedFS-HA-Demo

- name: Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"
  tags:
  - s3
  - s3-install

- name: Install required packages
  package:
    name: "{{ s3_packages }}"
    state: present
  tags:
  - s3
  - s3-install

- name: Ensure required services are running
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items: "{{ s3_services }}"
  tags:
  - s3
  - s3-install

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 755
  with_items:
  - "{{ s3_base_dir }}"
  - "{{ s3_config_dir }}"
  - "{{ s3_data_dir }}"
  - "{{ s3_log_dir }}"
  tags:
  - s3
  - s3-install

- name: Set up environment configuration file
  template:
    src: .env.j2
    dest: "{{ s3_config_dir }}/.env"
    owner: root
    group: root
    mode: 644
  tags:
  - s3
  - s3-install
  - s3-config

- name: Set up S3 configuration file
  template:
    src: seaweedfs_s3.toml.j2
    dest: "{{ s3_config_dir }}/s3.toml"
    owner: root
    group: root
    mode: 644
  tags:
  - s3
  - s3-install
  - s3-config

- name: Set up Docker Compose file
  template:
    src: docker-compose.yml.j2
    dest: "{{ s3_base_dir }}/docker-compose.yml"
    owner: root
    group: root
    mode: 644
  tags:
  - s3
  - s3-install
  - s3-config

- name: Set up Nginx configuration
  template:
    src: nginx.conf.j2
    dest: "{{ s3_config_dir }}/nginx.conf"
    owner: root
    group: root
    mode: 644
  tags:
  - s3
  - s3-install
  - s3-config

- name: Set up htpasswd script
  template:
    src: generate_htpasswd.sh.j2
    dest: "{{ s3_config_dir }}/generate_htpasswd.sh"
    owner: root
    group: root
    mode: 755
  tags:
  - s3
  - s3-install
  - s3-config

- name: Create .htpasswd for basic authentication
  command: "{{ s3_config_dir }}/generate_htpasswd.sh {{ s3_auth_user }} {{ s3_auth_password }}"
  args:
    creates: "{{ s3_config_dir }}/.htpasswd"
  tags:
  - s3
  - s3-install
  - s3-config

- name: Pull required Docker images
  docker_image:
    name: "{{ item }}"
    source: pull
  with_items:
  - nginx:alpine
  - python:3.9-slim
  - chrislusf/seaweedfs:latest
  tags:
  - s3
  - s3-install

- name: Start SeaweedFS S3 cluster
  docker_compose:
    project_src: "{{ s3_base_dir }}"
    state: present
  tags:
  - s3
  - s3-service

- name: Create systemd service for S3
  template:
    src: seaweedfs-s3.service.j2
    dest: /etc/systemd/system/s3-cluster.service
    owner: root
    group: root
    mode: 644
  notify: reload systemd
  tags:
  - s3
  - s3-service

- name: Enable S3 service
  systemd:
    name: s3-cluster
    enabled: yes
    state: started
  tags:
  - s3
  - s3-service

- name: Wait for S3 cluster to be ready
  uri:
    url: "http://{{ s3_host_address }}:8080/api/health"
    method: GET
    status_code: 200
    user: "{{ s3_auth_user }}"
    password: "{{ s3_auth_password }}"
  register: result
  until: result.status == 200
  retries: 10
  delay: 5
  tags:
  - s3
  - s3-service
