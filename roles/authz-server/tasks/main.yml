---
- name: Create user
  user: name=authz-server home={{ authz_server_dir }} shell=/sbin/nologin

- name: Copy start script
  template: src=templates/spring-boot.j2 dest=/etc/init.d/{{ springapp_service_name }} mode=0755
  notify: restart authz-server

- name: enable authz-server service
  service: name=authz-server enabled=yes

- name: Create logging directory
  file: path=/var/log/{{ springapp_service_name }} state=directory owner=authz-server group=authz-server mode=0755

- include: ../../../tasks/springbootapp/install-release.yml
  when: "authz_server_snapshot_timestamp == '' and authz_server_local_jar == ''"

- include: ../../../tasks/springbootapp/install-snapshot.yml
  when: "authz_server_snapshot_timestamp != '' and authz_server_local_jar == ''"

- include: ../../../tasks/springbootapp/install-local.yml
  when: "authz_server_local_jar != ''"

- name: Copy logging config
  template: src=logback.xml.j2 dest={{ authz_server_dir }}/logback.xml owner=authz-server group=authz-server mode=0740
  notify: restart authz-server

- name: Copy application config
  template: src=application.properties.j2 dest={{ authz_server_dir }}/application.properties owner=authz-server group=authz-server mode=0740
  notify: restart authz-server

- name: copy apache config
  template: src=authz.conf.j2 dest=/etc/httpd/conf.d/authz.conf
  notify: reload httpd

# see the same task the teams role to see why this is done.
- name: ensure the service is started
  service: name=authz-server enabled=yes state=started
  ignore_errors: true

- name: wait for authz-server to start
  wait_for: connect_timeout=30 port={{ springapp_tcpport }} state=started

- name: ensure the service is started
  service: name=teams enabled=yes state=started
