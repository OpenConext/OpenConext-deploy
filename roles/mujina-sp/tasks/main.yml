---
- name: Check presence of legacy init script
  stat:
    path: "/etc/init.d/{{ springapp_service_name }}"
  register: legacy_am_present

- name: Stop service when legacy init script is present
  service:
    name: "{{ springapp_service_name }}"
    state: stopped
  when:
    - legacy_am_present.stat.exists

- name: Clean up legacy init script
  file:
    path: "/etc/init.d/{{ springapp_service_name }}"
    state: absent

- name: Include preinstallation.yml
  include: ../../../tasks/springbootapp/preinstallation.yml

- include: ../../../tasks/springbootapp/install-maven-release.yml
 dd when:
    - "mujina_sp_local_jar == ''"

- name: Include springbootapp/install-local.yml
  include: "../../../tasks/springbootapp/install-local.yml"
  when:
    - "mujina_sp_local_jar != ''"


- name: Include install-local.yml
  include: ../../../tasks/springbootapp/install-local.yml
  when:
    - "mujina_sp_local_jar != ''"

- name: Copy logging config
  template: 
    src: logback.xml.j2 
    dest: "{{ mujina_sp_dir }}/logback.xml"
    owner: "{{ springapp_user }}" 
    group: "{{ springapp_user }}" 
    mode: 0740
  notify: restart mujina-sp

- name: Copy application config
  template:
    src: "application.yml.j2"
    dest: "{{ mujina_sp_dir }}/application.yml"
    owner: "{{ springapp_user }}"
    group: "{{ springapp_user }}"
    mode: 0740
  notify:
    - "restart mujina-sp"

- name: copy apache config
  template:
    src: "mujina_sp.conf.j2"
    dest: "/etc/httpd/conf.d/mujina_sp.conf"
  notify:
    - "reload httpd"

- name: Include postinstallation.yml
  include: ../../../tasks/springbootapp/postinstallation.yml
