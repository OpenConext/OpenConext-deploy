---
- name: Add group {{ engine_fpm_user }}
  group:
    name: "{{ engine_fpm_user }}"
    state: present

- name: Add user {{ engine_fpm_user }}
  user:
    name: "{{ engine_fpm_user }}"
    group: "{{ engine_fpm_user }}"
    createhome: no
    state: present

- name: Create directory for vhosts to store PHP sessions
  file:
    path: "{{ php_session_dir}}/engine"
    state: directory
    owner: "{{ engine_fpm_user }}"
    group: root
    mode: 0770

- name: Include install-release.yml
  include: install-release.yml
  when:
    - "(engine_branch is not defined or engine_branch == '') and not develop"

- name: Include install-branch.yml
  include: install-branch.yml
  when:
    - "(engine_branch is defined and engine_branch != '') and not develop"

- name: Include develop.yml
  include: develop.yml
  when:
    - develop | bool

- name: Include test.yml
  include: test.yml
  when:
    - develop | bool

- name: Place parameters.yml
  template:
    src: "{{ item }}.j2"
    dest: "{{ engine_current_release_symlink }}/app/config/{{ item }}"
    mode: 0644
  with_items:
    - parameters.yml

- name: Check presence of language specific overrides
  local_action: stat path="{{ inventory_dir }}/files/eb/languages/"
  register: overrides_present
  become: false

- name: Copy language specific overrides
  template:
    src: "{{ item }}"
    dest: "{{ openconext_releases_dir }}/OpenConext-engineblock/languages"
  when: overrides_present.stat.exists
  with_fileglob:
    - "{{ inventory_dir }}/files/eb/languages/*"

- name: Check if we have a custom logo
  local_action: stat path="{{ inventory_dir }}/files/logo.png"
  register: customlogo
  become: false

- name: Install environment specific logo
  copy:
    src: "{{ inventory_dir }}/files/logo.png"
    dest: "{{ openconext_releases_dir }}/OpenConext-engineblock/web/images/"
  when:
    customlogo.stat.exists

- name: Check if we have a custom background back image for the feedback page
  local_action: stat path="{{ inventory_dir }}/files/eb/background-back.svg"
  register: eb_customfeedbackbackground
  become: false

- name: Install environment specific background back image
  copy:
    src: "{{ inventory_dir }}/files/eb/background-back.svg"
    dest: "{{ openconext_releases_dir }}/OpenConext-engineblock/web/images/"
  when:
    eb_customfeedbackbackground.stat.exists

- name: Check if we have a custom background front image for the feedback page
  local_action: stat path="{{ inventory_dir }}/files/eb/background-front.svg"
  register: eb_customfeedbackforeground
  become: false

- name: Install environment specific background front image
  copy:
    src: "{{ inventory_dir }}/files/eb/background-front.svg"
    dest: "{{ openconext_releases_dir }}/OpenConext-engineblock/web/images/"
  when:
    eb_customfeedbackforeground.stat.exists

- name: Check if we have a Stepup GW certificate
  local_action: stat path="{{ inventory_dir }}/files/certs/stepup_gateway.pem"
  register: eb_stepupgwcert
  become: false

- name: Install Stepup GW certificate
  copy:
    src: "{{ inventory_dir }}/files/certs/stepup_gateway.pem"
    dest: "{{ engine_stepup_gateway_sfo_public_key_file }}"
  when:
    eb_stepupgwcert.stat.exists

- name: Install Apache vhost
  template:
    src: "{{ item }}.j2"
    dest: "/etc/httpd/conf.d/{{ item }}"
  with_items:
    - engine.conf
    - engine-api.conf
  notify:
    - "restart httpd"

- name: clean up old php-fpm 5.6 config
  file:
    path: "/etc/php-fpm.d/engine-pool.conf"
    state: absent

- name: php-fpm 72 config
  template:
    src: "{{ item }}.j2"
    dest: "/etc/opt/remi/php72/php-fpm.d/{{ item }}"
  with_items:
     - engine-pool-72.conf
  notify:
    - "restart php72-fpm"

- name: copy over the engineblock keys
  copy:
    content: "{{ engineblock_private_keys[item.key] }}"
    dest: "{{ item.value.privateFile }}"
    owner: "{{ engine_fpm_user }}"
    group: root
    mode: 0440
  with_dict: "{{ engine_keys }}"

- name: copy engineblock certificates to correct location
  copy:
    src: "{{ inventory_dir }}/files/certs/{{ item.value.publicKey }}"
    dest: "{{ item.value.publicFile }}"
  with_dict: "{{ engine_keys }}"
  when:
    - not engine_crt_not_in_inventory

- name: copy engineblock certificates to correct location when not located in the inventory dir
  copy:
    src: "files/certs/{{ item.value.publicKey }}"
    dest: "{{ item.value.publicFile }}"
  with_dict: "{{ engine_keys }}"
  when:
    - engine_crt_not_in_inventory | bool

- name: Configure EngineBlock
  template:
    src: "{{ item }}.j2"
    dest: "/etc/openconext/{{ item }}"
  with_items:
    - engineblock.ini
  notify:
    - "restart php72-fpm"

- name: Make the SYMFONY_ENV var available for scripts
  become: yes
  lineinfile:
    dest: "/etc/environment"
    state: present
    line: "SYMFONY_ENV={{ engine_apache_symfony_environment }}"

# This should always run before any scripts run, it ensures that the env specific
# configuration is loaded correctly.
- name: Prepare EngineBlock5 environment
  shell: SYMFONY_ENV=prod php72 /bin/composer prepare-env
  args:
      chdir: "{{ openconext_releases_dir }}/OpenConext-engineblock"
  changed_when: False

- name: Create EngineBlock test database
  mysql_db:
    name: "{{ engine_test_database_name }}"
    state: present
  when:
    - develop | bool

- name: Create EngineBlock test database user
  mysql_user:
    name: "{{ engine_test_database_user }}"
    host: "{{ engine_test_database_host }}"
    password: "{{ engine_test_database_password }}"
    priv: "{{ engine_test_database_name }}.*:ALL"
    state: present
  when:
    - develop | bool

- name: Check existence of the eb database
  shell: php72 app/console doctrine:migrations:status --env={{ engine_apache_symfony_environment }} | grep  "Current Version"  | awk '{print $4 }'
  args:
    chdir: "{{ openconext_releases_dir }}/OpenConext-engineblock"
  register: eb_database_version
  changed_when: False
  run_once: True

- name: Create the database schema
  command: "php72 app/console doctrine:schema:create -n --env={{ engine_apache_symfony_environment }}"
  args:
    chdir: "{{ openconext_releases_dir }}/OpenConext-engineblock"
  when:
    - eb_database_version.stdout == '0'
  run_once: True

- name: Add migration versions to the database
  command: "php72 app/console doctrine:migrations:version -n --add --all --env={{ engine_apache_symfony_environment }}"
  args:
    chdir: "{{ openconext_releases_dir }}/OpenConext-engineblock"
  when:
    - eb_database_version.stdout == '0'
  run_once: True

- name: Run EngineBlock Doctrine migrations
  command: "php72 app/console doctrine:migrations:migrate -n --env={{ engine_apache_symfony_environment }}"
  args:
    chdir: "{{ openconext_releases_dir }}/OpenConext-engineblock"
  register: doctrine_migrations_output
  changed_when: "'No migrations to execute' not in doctrine_migrations_output.stdout"
  tags: enginemigrations
  when:
    - engine_skip_db_migration is undefined
  run_once: true

- name: Make sure cache dir has correct permissions
  file:
    path: "{{engine_current_release_symlink}}/app/cache"
    owner: "{{ engine_fpm_user }}"
    group: "{{ engine_fpm_user }}"
    recurse: yes
  when:
    - not develop
  changed_when: False

- name: Make sure log dir has correct permissions
  file:
    path: "{{engine_current_release_symlink}}/app/logs"
    owner: "{{ engine_fpm_user }}"
    group: "{{ engine_fpm_user }}"
    recurse: yes
  when: not develop

# Remove all dirs, but keep the current version and from the rest the most recent one.
- name: Clean up old releases
  shell: ls -td {{ openconext_releases_dir }}/OpenConext-engineblock-* | grep -v $(readlink {{ engine_current_release_symlink }}) | tail -n +2 | xargs --no-run-if-empty rm -rv
  register: clean_engine_releases
  changed_when: '"removed" in clean_engine_releases.stdout'

# Remove all tarballs, but keep the current version and from the rest the most recent one.
- name: Clean up old builds
  shell: ls -td {{ openconext_builds_dir }}/OpenConext-engineblock-* {{ openconext_builds_dir }}/Releases/ | grep -v {{ engine_build_path }} | tail -n +2 | xargs --no-run-if-empty rm -rv
  register: clean_engine_builds
  changed_when: '"removed" in clean_engine_builds.stdout'
