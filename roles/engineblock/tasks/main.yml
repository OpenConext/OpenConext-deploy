- name: Add group engine
  ansible.builtin.group:
    name: "engine"
    state: present
  register: engine_guid

- name: Add user engine
  ansible.builtin.user:
    name: "engine"
    group: "engine"
    createhome: false
    state: present
  register: engine_uid

- name: Create some dirs
  ansible.builtin.file:
    state: directory
    dest: "{{ item }}"
    owner: root
    group: root
    mode: "0755"
  with_items:
    - "{{ current_release_config_dir_name }}"
    - "{{ current_release_config_dir_name }}/certs"
    - "{{ current_release_config_dir_name }}/configs"
    - "{{ current_release_config_dir_name }}/images"
    - "{{ current_release_config_dir_name }}/languages"

- name: Place parameters.yml
  ansible.builtin.template:
    src: parameters.yml.j2
    dest: "{{ current_release_config_dir_name }}/configs/parameters.yml"
    mode: "0640"
    owner: root
    group: engine
  notify: restart engine

- name: Check presence of environment specific attributes.json
  ansible.builtin.stat:
    path: "{{ inventory_dir }}/files/eb/attributes.json"
  register: attributes_json_present
  become: false
  delegate_to: localhost

- name: Copy environment specific attributes.json
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/files/eb/attributes.json"
    dest: "{{ current_release_config_dir_name }}/configs/"
    mode: "0644"
    owner: root
    group: engine
  when: attributes_json_present.stat.exists

- name: Check presence of language specific overrides
  ansible.builtin.stat:
    path: "{{ inventory_dir }}/files/eb/languages/"
  register: overrides_present
  become: false
  delegate_to: localhost

- name: Copy language specific overrides
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ current_release_config_dir_name }}/languages/"
    owner: root
    group: engine
    mode: "0644"
  when: overrides_present.stat.exists
  with_fileglob:
    - "{{ inventory_dir }}/files/eb/languages/*"
  notify:
    - "restart engine"

- name: Check if we have a custom logo
  ansible.builtin.stat:
    path: "{{ inventory_dir }}/files/logo.png"
  register: customlogo
  become: false
  delegate_to: localhost

- name: Install environment specific logo
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/files/logo.png"
    dest: "{{ current_release_config_dir_name }}/images/"
    owner: root
    group: engine
    mode: "0644"
  when: customlogo.stat.exists

- name: Check if we have a custom favicon
  ansible.builtin.stat:
    path: "{{ inventory_dir }}/files/favicon.ico"
  register: customfavicon
  become: false
  delegate_to: localhost

- name: Install environment specific favicon
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/files/favicon.ico"
    dest: "/opt/openconext/common/"
    owner: root
    group: root
    mode: "0644"
  when: customfavicon.stat.exists

- name: Check if we have a custom background back image for the feedback page
  ansible.builtin.stat:
    path: "{{ inventory_dir }}/files/eb/background-back.svg"
  register: eb_customfeedbackbackground
  become: false
  delegate_to: localhost

- name: Install environment specific background back image
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/files/eb/background-back.svg"
    dest: "{{ current_release_config_dir_name }}/images/"
    owner: root
    group: engine
    mode: "0644"
  when: eb_customfeedbackbackground.stat.exists

- name: Check if we have a custom background front image for the feedback page
  ansible.builtin.stat:
    path: "{{ inventory_dir }}/files/eb/background-front.svg"
  register: eb_customfeedbackforeground
  become: false
  delegate_to: localhost

- name: Install environment specific background front image
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/files/eb/background-front.svg"
    dest: "{{ current_release_config_dir_name }}/images/"
    owner: root
    group: engine
    mode: "0644"
  when: eb_customfeedbackforeground.stat.exists

- name: Check if we have a Stepup GW certificate
  ansible.builtin.stat:
    path: "{{ inventory_dir }}/files/certs/stepup_gateway.pem"
  register: eb_stepupgwcert
  become: false
  delegate_to: localhost

- name: Install Stepup GW certificate
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/files/certs/stepup_gateway.pem"
    dest: "{{ current_release_config_dir_name }}/certs/"
    owner: root
    group: engine
    mode: "0644"
  when: eb_stepupgwcert.stat.exists

- name: Copy over the engineblock keys
  ansible.builtin.copy:
    content: "{{ item.private_key }}"
    dest: "{{ current_release_config_dir_name }}/certs/{{ item.name }}.key"
    owner: root
    group: engine
    mode: "0440"
  loop: "{{ engine_key_and_certs }}"

- name: Copy engineblock certificates to correct location
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/files/certs/{{ item.crt_name }}"
    dest: "{{ current_release_config_dir_name }}/certs/{{ item.name }}.crt"
    owner: root
    group: engine
    mode: "0644"
  loop: "{{ engine_key_and_certs }}"

- name: Create Docker volume to contain the sessions
  community.docker.docker_volume:
    name: engineblock_sessions
    state: present

- name: Create the container
  community.docker.docker_container:
    name: "engineblock"
    image: ghcr.io/openconext/openconext-engineblock/openconext-engineblock:{{ engine_version }}
    pull: true
    restart_policy: "always"
    networks:
      - name: "loadbalancer"
    labels:
      traefik.http.routers.engine.rule: "Host(`engine.{{ base_domain }}`)"
      traefik.http.routers.engine.service: "engineblock"
      traefik.http.routers.engine.tls: "true"
      traefik.http.routers.engineapi.rule: "Host(`engine-api.{{ base_domain }}`)"
      traefik.http.routers.engineapi.service: "engineblock"
      traefik.http.routers.engineapi.tls: "true"
      traefik.enable: "true"
    env:
      APACHE_UID: "#{{ engine_uid.uid }}"
      APACHE_GUID: "#{{ engine_guid.gid }}"
      TZ: "{{ timezone }}"
    etc_hosts:
      host.docker.internal: host-gateway
    mounts:
      - source: "{{ current_release_config_dir_name }}/configs/parameters.yml"
        target: "/var/www/html/app/config/parameters.yml"
        type: bind
      - source: "{{ current_release_config_dir_name }}/languages/overrides.en.php"
        target: "/var/www/html/languages/overrides.en.php"
        type: bind
      - source: "{{ current_release_config_dir_name }}/languages/overrides.nl.php"
        target: "/var/www/html/languages/overrides.nl.php"
        type: bind
      - source: "{{ current_release_config_dir_name }}/configs/attributes.json"
        target: "/var/www/html/app/config/attributes.json"
        type: bind
      - source: "{{ current_release_config_dir_name }}/images/background-back.svg"
        target: "/var/www/html/web/images/background-back.svg"
        type: bind
      - source: "{{ current_release_config_dir_name }}/images/background-front.svg"
        target: "/var/www/html/web/images/background-front.svg"
        type: bind
      - source: "{{ current_release_config_dir_name }}/images/logo.png"
        target: "/var/www/html/web/images/logo.png"
        type: bind
      - source: "{{ current_release_config_dir_name }}/certs/"
        target: "/var/www/html/certs/"
        type: bind
      - source: "/opt/openconext/common/favicon.ico"
        target: "/var/www/html/web/favicon.ico"
        type: bind
      - source: engineblock_sessions
        target: /tmp/
        type: volume
