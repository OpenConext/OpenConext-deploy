---
- name: Add group {{ engine_fpm_user }}
  group: name={{ engine_fpm_user }} state=present

- name: Add user {{ engine_fpm_user }}
  user: name={{ engine_fpm_user }} group={{ engine_fpm_user }} createhome=no state=present

- name: Create directory for vhosts to store PHP sessions
  file: path={{ php_session_dir}}/engine state=directory owner={{ engine_fpm_user }} group=root mode=770

- include: install-release.yml
  when: "(engine_branch is not defined or engine_branch == '') and not develop"

- include: install-branch.yml
  when: "(engine_branch is defined and engine_branch != '') and not develop"

- include: develop.yml
  when: develop

- name: Install Apache vhost
  template: src={{ item }}.j2 dest=/etc/httpd/conf.d/{{ item }}
  with_items:
    - engine.conf
    - engine-api.conf
  notify:
    - restart httpd

# Put fpm config
- name: php-fpm config
  template: src={{ item }}.j2 dest=/etc/php-fpm.d/{{ item }}
  with_items:
     - engine-pool.conf
  notify:
    - restart php-fpm

- name: copy over the engineblock keys
  copy: content="{{ engineblock_private_key }}" dest="{{ item.value.privateFile }}" owner={{ engine_fpm_user }} group=root mode=440
  with_dict: "{{ engine_keys }}"

- name: copy engineblock certificates to correct location
  copy: src={{ inventory_dir }}/files/certs/{{ item.value.publicKey }} dest={{ item.value.publicFile }}
  with_dict: "{{ engine_keys }}"
  when: not engine_crt_not_in_inventory

- name: copy engineblock certificates to correct location when not located in the inventory dir
  copy: src=files/certs/{{ item.value.publicKey }} dest={{ item.value.publicFile }}
  with_dict: "{{ engine_keys }}"
  when: engine_crt_not_in_inventory

- name: Configure EngineBlock
  template: src={{ item }}.j2 dest=/etc/openconext/{{ item }}
  with_items:
    - engineblock.ini
  notify:
    - restart httpd

- name: Make the SYMFONY_ENV var available for scripts
  become: yes
  lineinfile: dest=/etc/environment state=present line="SYMFONY_ENV={{ engine_apache_symfony_environment }}"

# This should always run before any scripts run, it ensures that the env specific
# configuration is loaded correctly.
- name: Prepare EngineBlock5 environment
  shell: SYMFONY_ENV=prod composer prepare-env
  args:
      chdir: "{{ openconext_releases_dir }}/OpenConext-engineblock"
  changed_when: False

- name: Create EngineBlock test database
  mysql_db: name={{ engine_test_database_name }} state=present
  when: develop

- name: Create EngineBlock test database user
  mysql_user: name={{ engine_test_database_user }} host={{ engine_test_database_host }} password={{ engine_test_database_password }} priv={{ engine_test_database_name }}.*:ALL state=present
  when: develop

# Any scripts should be placed below this
- name: Run EngineBlock DbPatch migrations
  command: ./bin/migrate
  args:
    chdir: "{{ openconext_releases_dir }}/OpenConext-engineblock"
  register: migrate_output
  changed_when: "'no update needed' not in migrate_output.stderr"
  tags: enginemigrations
  when: engine_skip_db_migration is undefined
  run_once: true

- name: Run EngineBlock Doctrine migrations
  command: "app/console doctrine:migrations:migrate -n --env={{ engine_apache_symfony_environment }}"
  args:
    chdir: "{{ openconext_releases_dir }}/OpenConext-engineblock"
  register: doctrine_migrations_output
  changed_when: "'No migrations to execute' not in doctrine_migrations_output.stdout"
  tags: enginemigrations
  when: engine_skip_db_migration is undefined
  run_once: true

- name: Make sure cache dir has correct permissions
  file: path={{engine_current_release_symlink}}/app/cache owner={{ engine_fpm_user }} group={{ engine_fpm_user }} recurse=yes
  when: not develop
  changed_when: False

- name: Make sure log dir has correct permissions
  file: path={{engine_current_release_symlink}}/app/logs owner={{ engine_fpm_user }} group={{ engine_fpm_user }} recurse=yes
  when: not develop

# Remove all dirs, but keep the current version and from the rest the most recent one.
- name: Clean up old releases
  shell: ls -td {{ openconext_releases_dir }}/OpenConext-engineblock-* | grep -v $(readlink {{ engine_current_release_symlink }}) | tail -n +2 | xargs --no-run-if-empty rm -rv
  register: clean_engine_releases
  changed_when: '"removed" in clean_engine_releases.stdout'

# Remove all tarballs, but keep the current version and from the rest the most recent one.
- name: Clean up old builds
  shell: ls -td {{ openconext_builds_dir }}/OpenConext-engineblock-* {{ openconext_builds_dir }}/Releases/ | grep -v {{ engine_build_path }} | tail -n +2 | xargs --no-run-if-empty rm -rv
  register: clean_engine_builds
  changed_when: '"removed" in clean_engine_builds.stdout'
