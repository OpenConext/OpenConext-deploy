# IPv4 firewall configuration

*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT

# Some ICMP rules
-A INPUT -p icmp --icmp-type timestamp-request -j DROP
-A INPUT -p icmp --icmp-type timestamp-reply -j DROP
-A INPUT -p icmp --icmp-type address-mask-request  -j DROP
-A INPUT -p icmp --icmp-type address-mask-reply  -j DROP
-A INPUT -p icmp --icmp-type any -j ACCEPT


# General rules
{% for service in iptables_incoming %}
{{'##'|e }} {{ service.name }}
{{'##'|e }} {{'=' * service.name|length }}
-A INPUT  -p {{ service.protocol | default('tcp') }} {{ '-s '+service.source if service.source is defined else '' }} -m multiport --dports {{ service.port }}  -j ACCEPT
{% endfor %}


{# select all variables that start with iptables_incoming_ and put them in a dict #}
{% set iptables_all = vars | dict2items | selectattr('key', 'match', '^iptables_incoming_') | list | items2dict %}

{% for name, rules in iptables_all.iteritems() %}
### Rules from {{ name }}
{% for service in rules %}
{{'##'|e }} {{ service.name }}
{{'##'|e }} {{'=' * service.name|length }}
-A INPUT  -p {{ service.protocol | default('tcp') }} {{ '-s '+service.source if service.source is defined else '' }} -m multiport --dports {{ service.port }} {{'-d '+service.destination if service.destination is defined else ''}}  -j ACCEPT
{% endfor %}
{% endfor %}


{% if 'loadbalancer' in group_names %}
### Allow VRRP
-A INPUT -d 224.0.0.0/8 -p vrrp -j ACCEPT
{% endif %}

{% if 'dbcluster_nodes' in group_names %}
### Allow VRRP
-A INPUT -d 224.0.0.0/8 -p vrrp -j ACCEPT
{% endif %}

{% if 'storage' in group_names and develop %}
### Allow external database connections in development env
-A INPUT -p tcp --dport 3306 -j ACCEPT
{% endif %}

-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited

COMMIT
# A newline after COMMIT is required
