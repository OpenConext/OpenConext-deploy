---
- name: Include Rocky specific tasks
  ansible.builtin.include_tasks: setup-rocky.yml
  when: ansible_os_family == 'RedHat'

- name: Include Debian specific tasks
  ansible.builtin.include_tasks: setup-debian.yml
  when: ansible_os_family == 'Debian'

- name: Install docker
  ansible.builtin.package:
    name: docker-ce
    state: present

- name: Install docker config file
  ansible.builtin.template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: "0744"
  notify: "restart docker"

- name: Start and enable the docker daemon
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true

- name: Gather some facts, as we want to need info on the docker network interface
  ansible.builtin.setup:
    gather_subset: network

- name: Create the traefik configuration file directory
  ansible.builtin.file:
    state: directory
    path: "/opt/openconext/traefik/{{ item }}"
    owner: root
    mode: "0755"
  with_items:
    - config
    - certs

- name: Place the dynamic configuration
  ansible.builtin.copy:
    src: router.yaml
    dest: /opt/openconext/traefik/config/router.yaml
    owner: root
    mode: "0640"

- name: Create Traefik backend key
  ansible.builtin.copy:
    content: "{{ backend_tls_key }}"
    dest: "/opt/openconext/traefik/certs/backend.key"
    mode: "0600"
    owner: root
  when: docker_install_traefik

- name: Create SSL certificate
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/files/certs/backend.{{ base_domain }}.pem"
    dest: "/opt/openconext/traefik/certs/backend.crt"
    owner: root
    mode: "0644"

- name: Create the Traefik loadbalancer network
  community.docker.docker_network:
    name: loadbalancer
  when: docker_install_traefik | bool

- name: Create the Traefik loadbalancer
  community.docker.docker_container:
    name: loadbalancer
    image: traefik:latest
    published_ports:
      - "0.0.0.0:443:443"
    pull: true
    restart_policy: "always"
    networks:
      - name: "loadbalancer"
    command: "--providers.docker --providers.docker.network=loadbalancer --entrypoints.websecure.address=:443 --providers.file.directory=/config/config/ --providers.docker.exposedbydefault=false --accesslog=true --ping --serverstransport.insecureskipverify=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/openconext/traefik/:/config/
    comparisons:
      published_ports: strict
      networks: strict
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 1m
      timeout: 10s
      retries: 3
  when: docker_install_traefik | bool

- name: Place the iptables file
  ansible.builtin.template:
    src: ip4tables.sh.j2
    dest: /usr/local/sbin/ip4tables.sh
    mode: "0750"
    owner: root

- name: Disable the default iptables service
  ansible.builtin.systemd:
    service: iptables
    enabled: false
  when: ansible_os_family == 'RedHat'

- name: Disable the netfilter-persistent service
  ansible.builtin.systemd:
    service: netfilter-persistent
    enabled: false
  when: ansible_os_family == 'Debian'

- name: Place the new systemd service file
  ansible.builtin.copy:
    src: iptablesdocker.service
    dest: /etc/systemd/system/
    owner: root
    mode: "0755"

- name: Enable and start the new firewall service
  ansible.builtin.systemd:
    service: iptablesdocker.service
    enabled: true
    state: started
