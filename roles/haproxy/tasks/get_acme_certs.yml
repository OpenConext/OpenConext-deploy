---
- name: Install the certificates using acme
  ansible.builtin.shell:
    cmd: "/home/acme/.acme.sh/acme.sh --issue --stateless --keylength 2048  -d {{ base_domain }} {% for application in haproxy_applications %} -d {{ application.vhost_name }}  {% endfor %} --server https://acme.sectigo.com/v2/GEANTOV"
  become_user: acme
  become: true

- name: Deploy the certificates to haproxy without the need for haproxy to run
  ansible.builtin.shell:
    cmd: "DEPLOY_HAPROXY_PEM_PATH=/etc/haproxy/certs   /home/acme/.acme.sh/acme.sh --deploy -d {{ base_domain }} --deploy-hook haproxy"
  become_user: acme
  become: true

- name: Start and enable haproxy
  ansible.builtin.service:
    name: haproxy
    state: started
    enabled: true

- name: Wait for port 443 to become open
  ansible.builtin.wait_for:
    port: 443
    delay: 5      
    host: "{{ haproxy_sni_ip_ipv4 }}"

- name: Deploy the certificates to haproxy while running, ensuring that when updating certs it will hot reload haproxy
  ansible.builtin.shell:
    cmd: "DEPLOY_HAPROXY_HOT_UPDATE=yes   DEPLOY_HAPROXY_STATS_SOCKET=/var/lib/haproxy/haproxy.stats   DEPLOY_HAPROXY_PEM_PATH=/etc/haproxy/certs   /home/acme/.acme.sh/acme.sh --deploy -d {{ base_domain }} --deploy-hook haproxy"
  become_user: acme
  become: true
