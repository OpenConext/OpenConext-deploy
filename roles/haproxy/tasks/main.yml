---
- name: Remove CentOS SCLO repo
  yum:
    name: centos-release-scl-rh
    state: absent 
  register: scl_removed
  until: scl_removed is succeeded

- name: Clean up the yum repos
  command: yum clean metadata
  when: 
    - scl_removed.changed | bool

- name: Remove haproxy 1.8
  yum: 
    name: 
      - rh-haproxy18-runtime
      - rh-haproxy18-haproxy-syspaths
      - rh-haproxy18-haproxy
    state: absent
  register: haproxy_package_removed
  until: haproxy_package_removed is succeeded
  when: 
    - scl_removed.changed | bool

- name: Create lbops group
  group:
    name: lbops
    state: present

- name: Enable ius repo
  yum:
    name: "https://repo.ius.io/ius-release-el7.rpm"
    state: present

- name: Install haproxy and socat
  yum:
    name: 
      - haproxy20.x86_64
      - socat
    state: present
  register: haproxy_package_installed
  until: haproxy_package_installed is succeeded

- name: Copy haproxy sysconfig file
  copy:
    src: sysconfig_haproxy 
    dest: /etc/sysconfig/haproxy
  notify:
    - "restart haproxy"

- name: install OCSP update tool
  copy:
    src: "hapos-upd"
    dest: "/usr/local/sbin/"
    mode: 0755

- name: Create haproxy socket dir
  file:
    path: /var/lib/haproxy
    state: directory
    owner: haproxy
    group: lbops
    mode: 0775

- name: Create haproxy config map and acl directories
  file:
    path: "/etc/haproxy/{{ item }}"
    state: directory
    owner: root
    group: lbops
    mode: 0755
  with_items:
    - acls
    - maps

- name: Enable haproxy
  service:
    name: haproxy
    enabled: yes

- name: Create haproxy SSL key directory
  file:
    dest: "/etc/pki/haproxy/"
    state: directory
    owner: haproxy
    group: haproxy
    mode: 0700

- name: Create combined key and certificate file for HAproxy when using selfsigned certificates
  shell: cat {{tls.cert_path }}/{{ tls_star_cert }} {{ tls.cert_private_path }}/{{ tls_star_cert_key }} > "/etc/pki/haproxy/{{ item.name }}_haproxy.pem"
  args:
    creates: "/etc/pki/haproxy/{{ item.name }}_haproxy.pem"
  when:
    - "'selfsigned_certs' in group_names or use_selfsigned_certs | default(false)"
  with_items: "{{ haproxy_sni_ip.certs }}"
  notify:
    - "reload haproxy"

- name:  chmod 600 to the haproxy combined key and certificate file
  file:
    path: "/etc/pki/haproxy/{{ item.name }}_haproxy.pem"
    mode: 0600 
  with_items: "{{ haproxy_sni_ip.certs }}"
  when:
    - "'selfsigned_certs' in group_names or use_selfsigned_certs | default(false)"

- name: Create combined key and certificate file for HAproxy
  copy:
    content: "{{ item.key_content }}{{lookup('file', '{{ inventory_dir }}/files/certs/{{ item.crt_name }}')}}"
    dest: "/etc/pki/haproxy/{{ item.name }}_haproxy.pem"
    mode: 0600
  with_items: "{{ haproxy_sni_ip.certs }}"
  when:
    - "'selfsigned_certs' not in group_names or not use_selfsigned_certs | default(true)"
  notify:
    - "reload haproxy"

- name: Create combined key and certificate file for HAproxy restricted
  copy:
    content: "{{ item.key_content }}{{lookup('file', '{{ inventory_dir }}/files/certs/{{ item.crt_name }}')}}"
    dest: "/etc/pki/haproxy/{{ item.name }}_haproxy.pem"
    mode: 0600
  with_items: "{{ haproxy_sni_ip_restricted.certs }}"
  notify:
    - "reload haproxy"
  when:
    - "haproxy_sni_ip_restricted is defined and 'selfsigned_certs' not in group_names or not use_selfsigned_certs | default(true)"

- name: Install ffdhe3072 DH parameters
  copy: 
    src: ffdhe3072.pem
    dest: /etc/pki/haproxy/ffdhe3072.pem
    owner: root
    group: root
    mode: 0644
  notify:
    - "reload haproxy"

- name: Copy backend CA certificate
  copy:
    content: "{{ lookup('file', '{{ inventory_dir }}/files/certs/backend.{{ base_domain }}_ca.pem') }}"
    dest: "{{ tls_backend_ca }}"
    mode: 0644
    owner: root
  when:
    - haproxy_backend_tls | bool

- name: Copy haproxy config
  template:
    src: "{{ item }}.j2"
    dest: "/etc/haproxy/{{ item }}"
  with_items:
    - haproxy_global.cfg
    - haproxy_frontend.cfg
    - haproxy_backend.cfg
    - haproxy_stick_table_backend.cfg
  notify:
    - "reload haproxy"

- name: Copy haproxy acls
  template:
    src: "{{ item }}.j2"
    dest: "/etc/haproxy/acls/{{ item }}"
    owner: root
    group: lbops
    mode: 0664
  with_items:
    - validvhostsrestricted.acl
    - validvhostsunrestricted.acl
    - allowedips.acl
    - blockedips.acl
  notify:
    - "reload haproxy"

- name: Copy haproxy maps
  template: 
    src: "{{ item }}.j2"
    dest: "/etc/haproxy/maps/{{ item }}"
    owner: root
    group: lbops
    mode: 0664
  with_items:
    - backends.map
    - redirects.map
  notify:
    - "reload haproxy"
 
- name: Place file with list of browsers that do not accept samesite=none cookies
  copy:
    src: nosamesitebrowsers.lst
    dest: /etc/haproxy/maps/nosamesitebrowsers.lst
    owner: root
    group: lbops
    mode: 0664
  notify:
    - "reload haproxy"

- name: Start haproxy
  service:  
    name: haproxy
    state: started
    enabled: true

- name: Run hapos-upd for initial OCSP responses
  shell: /usr/local/sbin/hapos-upd --partial-chain --good-only --socket /var/lib/haproxy/haproxy.stats --VAfile /etc/pki/haproxy/{{ item.name }}_haproxy.pem --cert /etc/pki/haproxy/{{ item.name }}_haproxy.pem
  with_items:
    - "{{ haproxy_sni_ip.certs }}"
    - "{{ haproxy_sni_ip_restricted.certs }}"
  when:
    - haproxy_sni_ip_restricted is defined
    - "'selfsigned_certs' not in group_names or not use_selfsigned_certs | default(true)"

- name: install OCSP periodic update script
  template:
    src: "update_ocsp.j2"
    dest: "/usr/local/sbin/update_ocsp"
    mode: 0755
  when:
    - "'selfsigned_certs' not in group_names or not use_selfsigned_certs | default(true)"

- cron:
    name: "update ocsp info"
    special_time: hourly
    job: /usr/local/sbin/update_ocsp {{ ocsp_log_redirect | default('') }}
  when:
    - "'selfsigned_certs' not in group_names or not use_selfsigned_certs | default(true)"

- name: disable health checks for development envs
  shell: 'echo "disable health {{ item }}" | socat /var/lib/haproxy/haproxy.stats stdio'
  with_items:
    - profile_be/phpapps
    - engine_be/phpapps
  when:
    - develop | bool

- name: Save the disabled health check state to the state file for development envs
  shell: echo "show servers state" | socat /var/lib/haproxy/haproxy.stats - > /var/lib/haproxy/state
  when:
    - develop | bool
