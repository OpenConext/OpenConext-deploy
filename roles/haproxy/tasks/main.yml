---
- name: Download HAProxy GPG key
  ansible.builtin.get_url:
    url: https://haproxy.debian.net/bernat.debian.org.gpg
    dest: /etc/apt/trusted.gpg.d/haproxy.asc
    mode: '0644'

- name: Add HAProxy repository to sources list
  ansible.builtin.copy:
    dest: /etc/apt/sources.list.d/haproxy.list
    content: |
       deb http://haproxy.debian.net bookworm-backports-3.0 main
    mode: '0644'

- name: Install haproxy and socat
  ansible.builtin.apt:
    name:
      - haproxy=3.0.*
      - socat
      - git
    state: present
    update_cache: true
  register: haproxy_package_installed
  until: haproxy_package_installed is succeeded

- name: Create lbops group
  ansible.builtin.group:
    name: lbops
    state: present

- name: Include acme installation
  ansible.builtin.include_tasks: acme.yml
  when: haproxy_acme | bool

- name: Include get_acme_certs
  ansible.builtin.include_tasks: get_acme_certs.yml
  when: haproxy_acme | bool

- name: Check if we need to load additional certificates for migration
  ansible.builtin.find:
    paths: "/etc/haproxy/certs"
    patterns: "{{ base_domain }}.pem"
  register: haproxy_extra_certs_found
  when: "base_domain not in haproxy_ssl_hosts"

- name: Set additional certificates to load
  ansible.builtin.set_fact:
    haproxy_extra_certs: |
        {{ haproxy_extra_certs_found.files | map(attribute='path') | list }}
  when: "base_domain not in haproxy_ssl_hosts"

- name: Copy haproxy sysconfig file
  ansible.builtin.copy:
    src: sysconfig_haproxy
    dest: /etc/sysconfig/haproxy
    owner: root
    group: root
    mode: "0644"
  notify:
    - "restart haproxy"

- name: Create haproxy socket dir
  ansible.builtin.file:
    path: /var/lib/haproxy
    state: directory
    owner: haproxy
    group: lbops
    mode: "0775"

- name: Create haproxy config map, acl and certs directories
  ansible.builtin.file:
    path: "/etc/haproxy/{{ item }}"
    state: directory
    owner: root
    group: lbops
    mode: "0775"
  with_items:
    - acls
    - maps

- name: Create haproxy SSL key directory
  ansible.builtin.file:
    dest: "/etc/haproxy/certs"
    state: directory
    owner: haproxy
    group: haproxy
    mode: "0770"

- name: Create combined key and certificate file for HAproxy
  ansible.builtin.copy:
    content: "{{ item.key_content }}{{ lookup('file', '{{ inventory_dir }}/files/certs/{{ item.crt_name }}')}}"
    dest: "/etc/haproxy/certs/{{ item.name }}_haproxy.pem"
    mode: "0600"
  with_items: "{{ haproxy_sni_ip.certs }}"
  when: haproxy_sni_ip.certs is defined
  notify:
    - "reload haproxy"

- name: Create backend CA directory
  ansible.builtin.file:
    path: "{{ tls_backend_ca | dirname }}"
    state: directory
    owner: root
    group: haproxy
    mode: "0750"

- name: Copy backend CA certificate
  ansible.builtin.copy:
    content: "{{ lookup('file', '{{ inventory_dir }}/files/certs/backend.{{ base_domain }}_ca.pem') }}"
    dest: "{{ tls_backend_ca }}"
    mode: "0644"
    owner: root
  when:
    - haproxy_backend_tls | bool

- name: Copy haproxy config
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/haproxy/{{ item }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - haproxy_global.cfg
    - haproxy_frontend.cfg
    - haproxy_backend.cfg
    - haproxy_stick_table_backend.cfg
  notify:
    - "reload haproxy"

- name: Copy haproxy acls
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/haproxy/acls/{{ item }}"
    owner: root
    group: lbops
    mode: "0664"
  with_items:
    - allowedips.acl
    - blockedips.acl
    - internalips.acl
    - stagingips.acl
  notify:
    - "reload haproxy"

- name: Copy haproxy vhost acls
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/haproxy/acls/{{ item }}"
    owner: root
    group: lbops
    mode: "0664"
  with_items:
    - validvhostsrestricted.acl
    - validvhostsunrestricted.acl
  register: vhost_acls
  notify:
    - "reload haproxy"


- name: Copy haproxy maps
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/etc/haproxy/maps/{{ item }}"
    owner: root
    group: lbops
    mode: "0664"
  with_items:
    - backends.map
    - backendsstaging.map
    - redirects.map
    - ratelimits.map
    - certlist.lst
  notify:
    - "reload haproxy"

- name: Place file with list of browsers that do not accept samesite=none cookies
  ansible.builtin.copy:
    src: nosamesitebrowsers.lst
    dest: /etc/haproxy/maps/nosamesitebrowsers.lst
    owner: root
    group: lbops
    mode: "0664"
  notify:
    - "reload haproxy"

- name: Add lbops user to sudoers and let it reload haproxy
  ansible.builtin.copy:
    src: lbops
    dest: /etc/sudoers.d/lbops
    owner: root
    mode: "0440"

- name: Start and enable haproxy
  ansible.builtin.service:
    name: haproxy
    state: started
    enabled: true
