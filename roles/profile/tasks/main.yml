---
- name: Add group {{ appname }}
  ansible.builtin.group:
    name: "{{ appname }}"
    state: present
  register: profile_guid

- name: Add user {{ appname }}
  ansible.builtin.user:
    name: "{{ appname }}"
    group: "{{ appname }}"
    createhome: false
    state: present
  register: profile_uid

- name: Create some dirs
  ansible.builtin.file:
    state: directory
    dest: "{{ item }}"
    owner: root
    group: root
    mode: "0755"
  with_items:
    - "{{ current_release_config_dir_name }}"
    - "{{ current_release_config_dir_name }}/certs"
    - "{{ current_release_config_dir_name }}/translationoverrides"

- name: Put parameters YAML config
  ansible.builtin.template:
    src: "{{ item }}.yml.j2"
    dest: "{{ current_release_config_dir_name }}/{{ item }}.yaml"
    mode: "0640"
    group: "{{ appname }}"
  with_items:
    - parameters
    - global_view_parameters
  notify:
    - restart {{ appname }}

- name: Install the engineblock certificate
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/files/certs/{{ profile_eb_saml_public_key }}"
    dest: "{{ current_release_config_dir_name }}/certs/{{ profile_eb_saml_public_key }}"
    mode: "0644"
    owner: root
    group: root

- name: Check presence of language specific overrides
  ansible.builtin.stat:
    path: "{{ inventory_dir }}/files/profile/overrides/"
  delegate_to: localhost
  register: overrides_present
  become: false

- name: Copy language specific overrides
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ current_release_config_dir_name }}/translationoverrides/"
  when: overrides_present.stat.exists
  with_fileglob:
    - "{{ inventory_dir }}/files/profile/overrides/*"
  notify:
    - "restart {{ appname }}"

- name: Check if we have a custom favicon
  ansible.builtin.stat:
    path: "{{ inventory_dir }}/files/favicon.ico"
  delegate_to: localhost
  register: customfavicon
  become: false

- name: Install environment specific favicon
  ansible.builtin.copy:
    src: "{{ inventory_dir }}/files/favicon.ico"
    dest: "{{ current_release_config_dir_name }}/images/"
    owner: root
    group: root
    mode: "0644"
  when:
    customfavicon.stat.exists

- name: Create the container
  community.docker.docker_container:
    name: "{{ appname }}"
    image: ghcr.io/openconext/openconext-profile/profile:{{ profile_version }}
    etc_hosts:
      host.docker.internal: host-gateway
    pull: true
    restart_policy: "always"
    networks:
      - name: "loadbalancer"
    labels:
      traefik.http.routers.profile.rule: "Host(`{{ profile_vhost_name }}`)"
      traefik.http.routers.profile.tls: "true"
      traefik.enable: "true"
    env:
      APACHE_UID: "#{{ profile_uid.uid }}"
      APACHE_GUID: "#{{ profile_guid.gid }}"
      APP_ENV: prod
      HTTPD_CSP: "{{ httpd_csp.strict_with_static_img }}"
    mounts:
      - source: /opt/openconext/profile
        target: /var/www/html/config/openconext
        type: bind
      - source: /opt/openconext/common/favicon.ico
        target: /var/www/html/public/favicon.ico
        type: bind
      - source: /etc/localtime
        target: /etc/localtime
        type: bind
    

- name: Include the role manage_provision_entities to provision profile to Manage
  ansible.builtin.include_role:
    name: manage_provision_entities
  vars:
    entity_type: saml20_sp
