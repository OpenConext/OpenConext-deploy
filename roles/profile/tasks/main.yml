---
- name: Add group {{ profile_fpm_user }}
  group:
    name: "{{ profile_fpm_user }}"
    state: present

- name: Add user {{ profile_fpm_user }}
  user:
    name: "{{ profile_fpm_user }}"
    group: "{{ profile_fpm_user }}"
    createhome: no
    state: present

- name: Create directory for vhosts to store PHP sessions
  file:
    path: "{{ php_session_dir}}/profile"
    state: directory
    owner: "{{ profile_fpm_user }}"
    group: root
    mode: 0770

- name: Include install-release.yml
  include: install-release.yml
  when: profile_branch is not defined or profile_branch == ''

- name: Include install-branch.yml
  include: install-branch.yml
  when: profile_branch is defined and profile_branch != ''

- name: Create the cache dir for Symfony
  file:
    path: "{{ profile_symfony_cache_path }}"
    state: directory
    owner: "{{ profile_fpm_user }}"
    group: "{{ profile_fpm_user }}"
    recurse: yes

- name: Create the log dir for Symfony
  file:
    path: "{{ profile_symfony_log_path }}"
    state: directory
    owner: "{{ profile_fpm_user }}"
    group: '{{ profile_fpm_user }}'
    recurse: yes

- name: Place parameters.yml
  template:
    src: "{{ item }}.j2"
    dest: "{{ profile_current_release_symlink }}/app/config/{{ item }}"
    mode: 0644
  with_items:
    - parameters.yml

- name: Instantiate global_view_parameters.yml.dist
  command: mv global_view_parameters.yml.dist global_view_parameters.yml
  args:
    chdir: "{{ profile_current_release_symlink }}/app/config/"
    creates: "{{ profile_current_release_symlink }}/app/config/global_view_parameters.yml"

- name: Run commands with PHP 7.2
  lineinfile:
    path: "{{ profile_current_release_symlink }}/bin/console"
    regexp: '^#!/usr/bin/env php'
    line: '#!/usr/bin/env php72'

- name: Create the symfony cache
  command: bin/console cache:clear --env={{ profile_apache_symfony_environment }} --no-debug
  args:
    chdir: "{{ profile_current_release_symlink }}/"
  when:
    - not develop
  changed_when: false

- name: Make sure cache dir has correct permissions
  file:
    path: "{{ profile_current_release_symlink }}/var/cache"
    owner: "{{ profile_fpm_user }}"
    group: "{{ profile_fpm_user }}"
    recurse: yes
  changed_when: false

- name: Make sure log dir has correct permissions
  file:
    path: "{{ profile_current_release_symlink }}/var/logs"
    owner: "{{ profile_fpm_user }}"
    group: "{{ profile_fpm_user }}"
    recurse: yes
  changed_when: false

- name: Install Apache vhost
  template:
    src: "{{ item }}.j2"
    dest: "/etc/httpd/conf.d/{{ item }}"
  with_items:
    - profile.conf
  notify:
    - "restart httpd"

- name: php-fpm config
  template:
    src: "{{ item }}.j2"
    dest: "/etc/php-fpm.d/{{ item }}"
  with_items:
     - profile-pool.conf
  notify:
    - "restart php-fpm"

- name: php-fpm 72 config
  template:
    src: "{{ item }}.j2"
    dest: "/etc/opt/remi/php72/php-fpm.d/{{ item }}"
  with_items:
     - profile-pool-72.conf
  notify:
    - "restart php72-fpm"

- name: Configure Profile
  template:
    src: "{{ item }}.j2"
    dest: "/etc/openconext/{{ item }}"
  with_items:
    - profile.yml
  notify:
    - "restart php-fpm"

# Remove all dirs, but keep the current version and from the rest the most recent one.
- name: Clean up old releases
  shell: ls -td {{ openconext_releases_dir }}/OpenConext-profile-* | grep -v $(readlink {{ profile_current_release_symlink }}) | tail -n +2 | xargs --no-run-if-empty rm -rv
  register: clean_releases
  changed_when: '"removed" in clean_releases.stdout'

# Remove all tarballs, but keep the current version and from the rest the most recent one.
- name: Clean up old builds
  shell: ls -td {{ openconext_builds_dir }}/OpenConext-profile-* {{ openconext_builds_dir }}/Releases/ | grep -v {{ profile_build_path }} | tail -n +2 | xargs --no-run-if-empty rm -rv
  register: clean_builds
  changed_when: '"removed" in clean_builds.stdout'
