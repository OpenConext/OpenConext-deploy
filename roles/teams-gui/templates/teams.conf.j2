{% if apache_app_listen_address.teams is defined %}
Listen {{ apache_app_listen_address.teams }}:{{ loadbalancing.teams.port }}
<Virtualhost {{ apache_app_listen_address.teams }}:{{ loadbalancing.teams.port }}>
{% else %}
<Virtualhost *:443 >
{% endif %}

    # General setup for the virtual host, inherited from global configuration
    ServerName https://teams.{{ base_domain }}

    ErrorLog "|/usr/bin/logger -S 32k -p local3.err  -t 'Apache-teams'"
    CustomLog "|/usr/bin/logger -S 32k -p local3.info  -t 'Apache-teams'" combined

    RewriteEngine on

    RewriteCond %{REQUEST_URI} !\.js$
    RewriteCond %{REQUEST_URI} !\.svg$
    RewriteCond %{REQUEST_URI} !\.css$
    RewriteCond %{REQUEST_URI} !\.png$
    RewriteCond %{REQUEST_URI} !\.ico$
    RewriteCond %{REQUEST_URI} !\.woff$
    RewriteCond %{REQUEST_URI} !\.woff2$
    RewriteCond %{REQUEST_URI} !\.ttf$
    RewriteCond %{REQUEST_URI} !\.eot$
    RewriteCond %{REQUEST_URI} !^/api/
    RewriteCond %{REQUEST_URI} !^/deprovision/
    RewriteCond %{REQUEST_URI} !^/fonts/
    RewriteRule (.*) /index.html [L]

    ProxyPass /Shibboleth.sso !

    ProxyPass /api/teams/health http://localhost:{{ springapp_tcpport }}/health retry=0
    ProxyPass /api/teams/info http://localhost:{{ springapp_tcpport }}/info retry=0

    ProxyPass /api http://localhost:{{ springapp_tcpport }}/api retry=0
    ProxyPassReverse /api http://localhost:{{ springapp_tcpport }}/api

    ProxyPass /deprovision http://localhost:{{ springapp_tcpport }}/deprovision retry=0

    DocumentRoot "{{ _springapp_dir }}/current"

    <Directory "{{ _springapp_dir }}/current">
      Order       allow,deny
      Allow       from all
      Options     -Indexes
    </Directory>


    # Enable shibboleth for all other URLs, but the health check and info endpoint
    <Location ~ "/api/teams/(health|info)">
      allow from all
      satisfy any
    </Location>

    # The VOOT API is secured with basic auth
    <Location ~ "/api/voot/">
      allow from all
      satisfy any
    </Location>

    # The SP dashboard API is secured with basic auth
    <Location ~ "/spdashboard/">
      allow from all
      satisfy any
    </Location>

    # The internal lifecycle API is secured with basic auth
    <Location ~ "/deprovision/">
      allow from all
      satisfy any
    </Location>

    <Location ~ "(.*)(eot|svg|ttf|woff2|woff|js|css|png|jpg|ico)$">
      allow from all
      satisfy any
    </Location>

    <Location />
      AuthType shibboleth
      ShibUseHeaders On
      ShibRequestSetting applicationId teams
      ShibRequireSession On
      require valid-user
    </Location>
    <Location /invitation/>
      ShibRequestSetting forceAuthn true
    </Location>

    Header set Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' static.surfconext.nl static.{{ base_domain }} data:;"
    Header set X-Frame-Options "DENY"
    Header set Referrer-Policy "origin-when-cross-origin"
    Header set X-Content-Type-Options "nosniff"

    {% if haproxy_backend_tls %}
    SSLEngine on
    SSLCertificateFile      {{ tls.cert_path }}/backend.{{ base_domain }}.pem
    SSLCertificateKeyFile   {{ tls.cert_private_path }}/backend.{{ base_domain }}.key
    Include ssl_backend.conf
    {% endif %}

    {% if apache_app_listen_address.all is defined %}
    SSLEngine on
    SSLCertificateFile      {{ tls.cert_path }}/{{ tls_star_cert }}
    SSLCertificateKeyFile   {{ tls.cert_private_path }}/{{ tls_star_cert_key }}
    SSLCertificateChainFile {{ tls.cert_path_ca }}/{{ tls_ca }}
    Include ssl_backend.conf
    {% endif %}

</VirtualHost>
