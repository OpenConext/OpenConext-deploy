- name: Include docker vars
  ansible.builtin.include_vars: docker.yml

- name: Add group {{ appname }}
  ansible.builtin.group:
    name: "{{ appname }}"
    state: present
  register: webauthn_guid

- name: Add user {{ appname }}
  ansible.builtin.user:
    name: "{{ appname }}"
    group: "{{ appname }}"
    createhome: no
    state: present
  register: webauthn_uid

- name: Create some dirs
  ansible.builtin.file:
    state: directory
    dest: "{{ item }}"
    owner: root
    group: root
    mode: "0755"
  with_items:
    - "{{ current_release_config_dir_name }}"
    - "{{ current_release_appdir }}/public/images"

- name: Install images
  ansible.builtin.include_role:
    name: stepupapp
    tasks_from: copyimages

- name: Install the GSSP certificates
  ansible.builtin.include_role:
    name: stepupapp
    tasks_from: copygsspidpcerts

- name: Create the metadata service dir
  ansible.builtin.file:
    state: directory
    dest: "{{ item }}"
    owner: root
    mode: "0755"
  with_items:
    - "{{ current_release_config_file_dir_name }}/mds"

- name: Create and empty the metadata service cache dir
  ansible.builtin.file:
    state: "{{ item }}"
    path: "{{ current_release_config_file_dir_name }}/var/mds/"
    owner: root
    group: "{{ appname }}"
    mode: "0774"
  with_items:
    - absent
    - directory

- name: Download metadata service blob
  ansible.builtin.get_url:
    url: https://mds3.fidoalliance.org/
    dest: "{{ current_release_config_file_dir_name }}/mds/blob.jwt"
    mode: '0744'
    force: true

- name: Download metadata service signing certificate
  ansible.builtin.get_url:
    url: http://secure.globalsign.com/cacert/root-r3.crt
    dest: "{{ current_release_config_file_dir_name }}/mds/fido2-mds.cer"
    mode: '0744'
    force: true

- name: Place parameters.yml
  ansible.builtin.template:
    src: parameters.yml.j2
    dest: "{{ current_release_config_dir_name }}/parameters.yaml"
    mode: "0640"
    owner: root
    group: "{{ appname }}"
  notify: restart webauthn

# - name: Copy trusted certificates
#   ansible.builtin.copy:
#     src: "{{ item }}"
#     dest: "{{ current_release_config_file_dir_name }}/trusted_certificates/"
#     mode: "444"
#   with_fileglob:
#     - "{{ inventory_dir }}/files/stepup-webauthn/trusted_certificates/*"

- name: Put webauthn configuration script in /root/
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "/root/{{ item }}"
    group: root
    owner: root
    mode: "0500"
  with_items:
    - "01-webauthn-db_init.sh"

- name: Add the MariaDB docker network to the list of networks when MariaDB runs in Docker
  ansible.builtin.set_fact:
    webauthn_docker_networks:
      - name: loadbalancer
      - name: openconext_mariadb
  when: mariadb_in_docker | default(false) | bool

- name: Create the container
  community.docker.docker_container:
    name: "{{ appname }}"
    image: ghcr.io/openconext/stepup-webauthn/stepup-webauthn:{{ webauthn_version }}
    pull: true
    restart_policy: "always"
    networks: "{{ webauthn_docker_networks }}"
    labels:
      traefik.http.routers.webauthn.rule: "Host(`webauthn.{{ base_domain }}`)"
      traefik.http.routers.webauthn.tls: "true"
      traefik.enable: "true"
    env:
      APACHE_UID: "#{{ webauthn_uid.uid }}"
      APACHE_GUID: "#{{ webauthn_guid.gid }}"
    mounts:
      - source: /opt/openconext/azuremfa/public/images/header-logo.png
        target: /var/www/html/public/build/images/header-logo.png
        type: bind
      - source: /opt/openconext/webauthn
        target: /var/www/html/config/openconext
        type: bind
  register: webauthncontainer
