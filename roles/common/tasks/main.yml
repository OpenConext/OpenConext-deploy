---
- name: set timezone
  file: state=link src=/usr/share/zoneinfo/{{ timezone }} dest=/etc/localtime force=True

- name: check that hostname and fqdn are set up correctly
  command: "/usr/bin/hostname --fqdn"
  any_errors_fatal: true

- name: Add Epel repo
  yum: name=epel-release.noarch state=present

- name: Install tools / clients
  yum: name={{ item }} state=present
  with_items:
     - telnet
     - sudo
     - lynx
     - openldap-clients
     - ntp
     - unzip
     - libselinux-python

- name: Start ntpd
  service: name=ntpd state=started enabled=yes

# TODO: proper SElinux support.  Would require at least to explicitly open up
# all non-standard apache ports (9876, loadbalancing.engine.port, etc)
# we don't use the standard ansible selinux module, because it is way to
# limited in how it handles systems without SELinux binaries or SELinux
# support (like test)
- name: check for presence of SELinux config file
  stat: path=/etc/sysconfig/selinux
  register: selinux_config

- name: check for presence of SELinux binaries
  stat: path=/usr/sbin/setenforce
  register: selinux_binaries

- name: check for SELinux status
  shell: /usr/sbin/sestatus | head -1 | awk '{ print $3 }'
  when: selinux_binaries.stat.exists == True
  register: selinux_status

- name: disable SELinux
  lineinfile: dest=/etc/sysconfig/selinux state=present regexp='^SELINUX=' line='SELINUX=permissive'
  when: selinux_config.stat.exists == True

- name: disable SELinux NOW
  command: /usr/sbin/setenforce 0
  when: "selinux_binaries.stat.exists == True and selinux_status.stdout == 'enabled'"

- name: check SELinux status
  shell: "/usr/sbin/sestatus | egrep '^SELinux status: *disabled' || /usr/sbin/sestatus | egrep '^Current mode: *permissive'"
  when: selinux_binaries.stat.exists == True

- name: Remove exim when sendmail needs to be installed
  yum: name=exim state=absent
  
- name: Install sendmail
  yum: name={{ item }} state=present
  with_items:
     - sendmail
     - sendmail-cf
  when: sendmail_smarthost is defined

- name: Copy sendmail template
  template: src='sendmail.cf.j2' dest='/etc/mail/sendmail.cf'
  when: sendmail_smarthost is defined
  notify: rebuild sendmail config
  
- name: Start and enable sendmail service
  service: name=sendmail state=started enabled=yes
  when: sendmail_smarthost is defined

# journald binary logs corrupt on specific engineblock messages.
# disabling compression fixes that issue
- name: Disable journald compression
  copy: src=journald.conf dest='/etc/systemd/journald.conf'
  notify: 
    - restart journald

