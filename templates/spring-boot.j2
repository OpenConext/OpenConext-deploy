#!/bin/bash
#
# Startup script for a spring-boot powered application
#
# chkconfig: - 84 16
# description: {{ springapp_service_name }}

# Source function library.
. /etc/rc.d/init.d/functions


#######################################
# START configurable per environment
#######################################
APPLICATION_HOME="{{ springapp_dir }}"
APP_NAME="{{ springapp_service_name }}"
APP_JAR="{{ springapp_jar }}"
APP_USER="{{ springapp_user }}"
HEAPSIZE="{{ springapp_heapsize }}"

LOG="/var/log/$APP_NAME.log"
LOCK="/var/lock/subsys/$APP_NAME"
JAVA="/usr/lib/jvm/java-1.8.0/bin/java"
{% if springapp_debug == "True" %}
DEBUG_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address={{ springapp_debug_port }}"
{% else %}
DEBUG_OPTS=""
{% endif %}
#######################################
# END configurable per environment
#######################################

# For SELinux we need to use 'runuser' not 'su'
if [ -x "/sbin/runuser" ]; then
    SU="/sbin/runuser -s /bin/sh"
else
    SU="/bin/su -s /bin/sh"
fi

export APPLICATION_HOME

RETVAL=0

pid_of_app() {
    pgrep -f "java.*$APP_JAR"
}

start() {
    pid=`pid_of_app`
    if [ -n "$pid" ]; then
        echo "$APP_NAME (pid $pid) is already running..."
        return 0
    fi

    cd "$APPLICATION_HOME"
    $SU - $APP_USER -c "nohup $JAVA $DEBUG_OPTS -Xms$HEAPSIZE  -Xmx$HEAPSIZE -jar $APP_JAR >> /var/log/$APP_NAME/init.log 2>&1 &"

    pid_of_app > /dev/null
    RETVAL=$?
    [ $RETVAL = 0 ] && success $"$APP_NAME" || failure $"$APP_NAME"
    echo

    [ $RETVAL = 0 ] && touch "$LOCK"
}

stop() {
    pid=`pid_of_app`
    [ -n "$pid" ] && kill $pid
    RETVAL=$?
    cnt=10
    while [ $RETVAL = 0 -a $cnt -gt 0 ] &&
        { pid_of_app > /dev/null ; } ; do
            sleep 1
            ((cnt--))
    done

    [ $RETVAL = 0 ] && rm -f "$LOCK"
    [ $RETVAL = 0 ] && success $"$APP_NAME" || failure $"$APP_NAME"
    echo
}

status() {
    pid=`pid_of_app`
    if [ -n "$pid" ]; then
        echo "${APP_NAME} (pid $pid) is running..."
        return 0
    fi
    if [ -f "$LOCK" ]; then
        echo $"${base} dead but subsys locked"
        return 2
    fi
    echo "$APP_NAME is stopped"
    return 3
}

# See how we were called.
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
esac

exit $RETVAL
