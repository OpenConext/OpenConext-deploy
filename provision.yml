---
- hosts: all
  gather_facts: no
  tasks:
    - name: Read vars from secrets file
      include_vars: "{{ secrets_file }}"
      no_log: true
      tags:
       - always

- hosts: rsyslog
  gather_facts: yes
  become: true
  roles:
    - role: rsyslog
      tags: ['core', 'base', 'rsyslog']

- hosts: base
  gather_facts: yes
  become: true
  roles:
    - role: iptables
      when:
        - iptables_enable | bool
      tags: ['core', 'base', 'iptables']
    - role: selfsigned_certs
      when:
        - "{{ use_selfsigned_certs | default(false) | bool }}"
      tags: ['core', 'base', 'selfsigned_certs']

- hosts: loadbalancer
  gather_facts: true
  become: true
  roles:
    - role: haproxy
      tags: ['core', 'loadbalancer_ha', 'loadbalancer', 'lb']
    - role: keepalived
      when:
        - "'loadbalancer_ha' in groups and inventory_hostname in groups['loadbalancer_ha']"
      tags: ['core', 'loadbalancer_ha', 'keepalived']
    - role: bind
      when:
        - "'loadbalancer_ha' in groups and inventory_hostname in groups['loadbalancer_ha']"
      tags: ['core', 'loadbalancer_ha', 'bind']

- hosts: db_mysql
  gather_facts: no
  become: true
  serial: 1
  roles:
    - role: mysql
      when:
        - inventory_hostname in groups['storage']
      tags: ['core', 'db_mysql', 'mysql']
    - role: galera
      when:
        - inventory_hostname in groups['dbcluster']
      tags: ['core', 'db_mysql', 'galera']
    - role: keepalived
      when:
        - inventory_hostname in groups['dbcluster_nodes']
      tags: ['core', 'db_mysql', 'keepalived']
    - role: galera_create_users
      tags: ['core', 'db_mysql', 'galera', 'galera_create_users']

- hosts: mongo_servers
  gather_facts: yes
  become: true
  roles:
    - role: mongo
      tags: ['core', 'mongo']

- hosts: elk
  gather_facts: true
  become: true
  roles:
    - role: elk
      tags: ['elk' ]

- hosts: stats
  gather_facts: true
  become: true
  roles:
    - role: influxdb
      tags: ['influxdb' ]

- hosts: stepuppapp
  become: true
  roles:
    - { role: stepupwebauthn,                            tags: ['stepupwebauthn','stepup' ] }
    - { role: stepupazuremfa,                            tags: ['stepupazuremfa', 'stepup'] }
    - { role: stepupmiddleware,                          tags: ['stepupmiddleware' , 'stepup'] }
    - { role: stepupgateway,                             tags: ['stepupgateway' , 'stepup'] }
    - { role: stepupselfservice,                         tags: ['stepupselfservice' , 'stepup'] }
    - { role: stepupra        ,                          tags: ['stepupra' , 'stepup'] }
    - { role: stepupgateway        ,                     tags: ['stepupgateway' , 'stepup'] }

- hosts: docker_apps1,docker_apps2
  become: true
  roles:
    - { role: docker,     tags: ['docker' ] }

- hosts: mujina
  become: true
  roles:
    - { role: mujina-idp, tags: ["mujina-idp", "mujina"] }
    - { role: mujina-sp, tags: ["mujina-sp", "mujina"] }

- hosts: docker_apps1
  become: true
  roles:
    - { role: invite,     tags: ['invite' ] }
    - { role: dashboard,  tags: ["dashboard"] }
    - { role: teams,      tags: ["teams"] }
    - { role: pdp,        tags: ["pdp"] }
    - { role: voot,       tags: ["voot"] }
    - { role: attribute-aggregation, tags: ["aa", "attribute-aggregation"] }
    - { role: oidc-playground, tags: ["oidc-playground"] }
    - { role: myconext,    tags: ["myconext"] }
    - { role: manage,    tags: ["manage"] }
    - { role: oidcng,    tags: ["oidcng"] }
    - { role: stats,      tags: ["stats"] }
    - { role: diyidp,      tags: ["diyidp"] }
    - { role: profile,      tags: ["profile"] }
    - { role: lifecycle,      tags: ["lifecycle"] }
    - { role: stepuptiqr, tags: ['stepuptiqr' , 'stepup'] }
    - { role: openaccess, tags: ['openaccess' ] }

- hosts: docker_apps2
  become: true
  roles:
    - { role: engineblock,      tags: ["eb"] }
    - { role: stepupgateway,    tags: [ 'stepupgateway' , 'stepup' ] }

- hosts: docker_mariadb
  become: true
  roles:
    - { role: mariadbdocker, tags: ['mariadbdocker']}
    - { role: mongodbdocker, tags: ['mongodbdocker']}

- hosts: docker_minio
  become: true
  roles:
    - { role: minio, tags: ["minio"] }

- import_playbook: "{{ environment_dir }}/playbook.yml"
