---
- hosts: all
  gather_facts: no
  tasks:
  - name: Read vars from secrets file
    include_vars: "{{ secrets_file }}"
    tags:
     - always

- hosts: all
  gather_facts: no
  name: Special environment role download section
  tasks:
  - name: Check if environment exists
    stat:
      path: "{{ environment_dir }}/requirements.yml"
    register: envdir
    delegate_to: localhost
    run_once: true
    tags:
      - always

  - name: Import role for test environment if exists
    command: "ansible-galaxy install -r {{ environment_dir }}/requirements.yml -p roles-external/"
    delegate_to: localhost
    run_once: true
    when: envdir.stat.exists
    tags:
      - always

- hosts: loadbalancer:loadbalancer-vm:php-apps:java-apps:storage:oidc:dbcluster
  gather_facts: yes
  become: true
  roles:
    - { role: common,       tags: ['common'] }
    - { role: iptables,     tags: ['iptables'] }
    - { role: rsyslog,      tags: ['rsyslog'] }
  handlers:
    - include: roles/httpd/handlers/main.yml

- hosts: vm
  become: true
  roles:
    - { role: hosts,   tags: ['hosts'] }
    - { role: tls,      tags: ['tls'] }

- hosts: loadbalancer-vm
  gather_facts: true
  become: true
  roles:
    - { role: haproxy, tags: ['lb'] }

- hosts: loadbalancer
  gather_facts: true
  become: true
  roles:
    - { role: tls,      tags: ['tls'] }
    - { role: keepalived, tags: ['keepalived'] }
    - { role: haproxy, tags: ['lb'] }
    - { role: bind, tags: ['bind'] }

- hosts: php-apps:java-apps:oidc
  gather_facts: no
  become: true
  roles:
    - { role: httpd,     tags: ['httpd'] }

- hosts: storage
  gather_facts: no
  become: true
  roles:
    - { role: mysql, tags: ['mysql'] }

- hosts: dbcluster
  gather_facts: yes
  become: true
  roles:
    - { role: galera, tags: ['galera'] }

- hosts: dbcluster_nodes
  gather_facts: yes
  become: true
  roles:
    - { role: keepalived, tags: ['keepalived'] }

- hosts: galera_provision_host
  roles:
    - { role: galera_create_users, tags: ['galera', 'galera_create_users'] }

- hosts: mongo_servers
  gather_facts: yes
  become: true
  roles:
    - { role: mongo, tags: ['mongo'] }

- hosts: php-apps
  gather_facts: no
  become: true
  vars:
    env_lang: php
  roles:
    - { role: php56fpm,          tags: ['php'     ] }
    - { role: static,            tags: ['static'  ] }
    - { role: metadata,          tags: ['static'  ] }
    - { role: openconext-common, tags: ['eb','profile'] }
    - { role: engineblock,       tags: ['eb'      ] }
    - { role: profile,           tags: ['profile' ] }
  handlers:
    - include: roles/httpd/handlers/main.yml

- hosts: java-apps-common
  gather_facts: true
  become: true
  vars:
    env_lang: java
  roles:
    - { role: java,             tags: ['java' ] }
    - { role: shibboleth,       tags: ['shib'   ] }
  handlers:
    - include: roles/httpd/handlers/main.yml

- hosts: java-apps
  gather_facts: true
  become: true
  vars:
    env_lang: java
  roles:
    - { role: teams-gui,        tags: ['teams', 'teams-gui'       ] }
    - { role: teams-server,     tags: ['teams', 'teams-server'    ] }
    - { role: authz-server,     tags: ['oauth', 'authz-server'    ] }
    - { role: authz-admin,      tags: ['oauth', 'authz-admin'     ] }
    - { role: voot,             tags: ['oauth', 'voot'            ] }
    - { role: authz-playground, tags: ['oauth', 'authz-playground'] }
    - { role: pdp-gui,          tags: ['pdp', 'pdp-gui'] }
    - { role: pdp-server,       tags: ['pdp', 'pdp-server'] }
    - { role: remove-grouper,               tags: ['remove-grouper'] }
    - { role: attribute-aggregation-gui,    tags: ['attribute-aggregation', 'attribute-aggregation-gui'] }
    - { role: attribute-aggregation-server, tags: ['attribute-aggregation', 'attribute-aggregation-server'] }
    - { role: manage-gui,                   tags: ['manage', 'manage-gui'] }
    - { role: manage-server,                tags: ['manage', 'manage-server'] }
    - { role: dashboard-gui,  when: dashboard_install,             tags: ['dashboard', 'dashboard-gui'] }
    - { role: dashboard-server, when: dashboard_install,           tags: ['dashboard', 'dashboard-server'] }
  handlers:
    - include: roles/httpd/handlers/main.yml

- hosts: vm
  roles:
    - { role: vm_only_provision_manage_eb, tags: ['vm_only_provision_manage_eb'] }

- hosts: java-apps-vm
  gather_facts: true
  become: true
  roles:
   - { role: mujina-idp,        tags: ['legacy' ] }
   - { role: mujina-sp,         tags: ['legacy' ] }

- hosts: oidc
  gather_facts: true
  become: true
  vars:
    env_lang: java
  roles:
    - { role: tomcat,           tags: ['tomcat' ] }
    - { role: oidc,            tags: ['oidc' ] }
  handlers:
    - include: roles/httpd/handlers/main.yml
    - include: roles/tomcat/handlers/main.yml

- hosts: all
  gather_facts: false
  name: Include extra playbook if available
  tasks:
  - name: check if playbook.yml is available for extra includes
    stat:
      path: playbook.yml
    register: playb
    delegate_to: localhost
    run_once: true

  - name: include playbook.yml
    include: playbook.yml
    when: playb.stat.exists
    delegate_to: localhost
    run_once: true
